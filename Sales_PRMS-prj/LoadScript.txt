///$tab License
/*************************************************************************
* 
* Ansell Healthcare, LLC
* DVSTS Ltd.
* CONFIDENTIAL
* __________________
* 
* 2016 Ansell Healthcare, LLC 
* 2016 DVSTS Ltd. 
* All Rights Reserved.
* 
* NOTICE:  All information contained herein is, and remains
* the property of Ansell Healthcare, LLC and DVSTS Ltd. The
* intellectual and technical concepts contained herein are
* proprietary to Ansell Healthcare, LLC and DVSTS Ltd. and
* may be covered by U.S. and Foreign Patents, patents in
* process, and are protected by trade secret or copyright
* law. Dissemination of this information or reproduction of
* this material is strictly forbidden unless prior written
* permission is obtained from Ansell Healthcare, LLC.
*************************************************************************/
 
///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='₹ #,##0.00;₹ -#,##0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='MM/DD/YYYY';
SET TimestampFormat='MM/DD/YYYY hh:mm:ss[.fff]';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';

LET vReloadTime = Num(Now(),'##############');

$(Include=.\Sales_PRMSsettings.qvs);

LET vSrcPath = if(Right(vSrcPath,1) = '\',vSrcPath,vSrcPath&'\');
LET vQVDPath = if(Right(vQVDPath,1) = '\',vQVDPath,vQVDPath&'\');

$(Include=$(vINCPath)procedures.qvs);
$(Include=$(vINCPath)\transformmailprocedures.qvs);

SET vPurgeChars = Chr(9)&Chr(10)&Chr(13)&Chr(32)&Chr(160)&Chr(12288)&'-';
SET vRegionList = 'NA','EMEA', 'APAC' ,'Central','LAC','Microgard';

IF vReloadAll then

	EXECUTE powershell -Command "& {remove-item '$(vQVDPath)Sales_PRMS-*.qvd' -Force}";

	LET vReloadAll = False();

ENDIF

CALL FindStartDate('Sales_PRMS', 'pStartDate');
LET pStartDate = RangeMin(pStartDate,alt(vIncStartDate+1,MonthStart(Today(0)-45,-1)));
///$tab test
///$tab v08Update
if Alt(v08Update,0)=1 THEN

	FOR Each vFile in FileList(vQVDPath&'Sales_PRMS-*.qvd')
		
		t:
		NoConcatenate
		LOAD *
		FROM
		[$(vFile)]
		(qvd)
		Where not ((FN like '$(vSrcPath)Transaction\PRMS_Sales_Final.qvd')
			and not ( 
		([Orginal Invoice]<>'DS' or match([Entity],'10','30','60')<>1 or (left([Invoice Number],2))<>90) 
		and (match([Entity],'10','30','60')<>1 or (left([Invoice Number],2))<>90) 
		and ([Orginal Invoice]<>'DS' or (left([Invoice Number],2))<>90)));
		
		STORE t into '$(vFile)' (qvd);
		
		DROP Table t;
		
		LET vYear = Null();
	
	NEXT vFile;
	
	LET vFile = Null();

	let v08Update = 0;

ENDIF
///$tab PRMS
SET pTable = Sales_PRMS_Transaction;
SET pMask = Transaction\PRMS_Sales_Final.qvd;
SET pLoad = RecNo() as [RN]
		,FilePath() as [FN]
		
		,[Trxn Currency] 		as [Trxn Currency]
		,[COGS Trxn Currency] 	as [COGS Trxn Currency]
		
		,if(
			Alt(Len(Purgechar([Trxn Currency],$(vPurgeChars))),0)=0
			,[Currency]
			,[Trxn Currency]
			) as [FinalCurrency]
		,if(
			[Trxn Sales Amount]=0
			,[Currency]
			,[COGS Trxn Currency]
			) as [COGS_FinalCurrency]
		,[Currency] as [LocalCurrency]
		,[Currency] as [Currency]
		
		,[Currency]&'-'&Text(Date([Invoice Date],'YYMM')) as [CompoundKey]
		
		,Text([Company Number Detail]) 	as [Entity]
		,Text([CustomerID]) 			as [Customer Number]
		,Text(trim([Item Number])) 		as [Product Number]
		
		,[ShipToDeliveryLocationID]
		,Text([CustomerID])&'-'&[ShipToDeliveryLocationID] as [CustomerShipToAddressID]
		
		,[Item Branch Key (inv org #)] as [Orginal Invoice]
		,[Item Branch Key (inv org #)] as [Inventory Org]
		
		,[Order Number]
		,[Order Line Number] as [Address Number]
		,[Invoice Number]
		,[Doc Type]
		,[Ansell Std U/M] 	as [U/M]
		
		,Num([Ship Date]) 		as [Ship Date]
		,Num([Invoice Date]) 	as [Invoice Date]
		,Num([Invoice Date]) 	as [Promised Delivery Date]
		,Num([Invoice Date]) 	as [Date]
		,Text(Date([Invoice Date],'YYYY')) as [MonthStoreFlag]
		
		,[Sales Quantity]
		,Alt(Num#([Sales Quantity]),0) as [Sales Qty]
		
		,[GROSS Sales Amount LC] 				as [GROSS Sales Amount LC.src]
		,Alt(Num#([GROSS Sales Amount LC]),0) 	as [GROSS Sales Amount LC]

		,[Returns LC] 				as [Returns LC.src]
		,Alt(Num#([Returns LC]),0) 	as [Returns LC]

		,[Sales Cost Amount LC (nst)]
		,Alt(Num#([Sales Cost Amount LC (nst)]),0) as [Sales Cost Amount LC (net see thru)]
		
		,if(Alt(Num#([Trxn COGS Amount]),0)=0,Alt(Num#([Sales Cost Amount LC (nst)]),0),Alt(Num#([Trxn COGS Amount]),0)) as [BASE_COGS]

		,[Sales Cost Amount Legal Entity]
		,$(eEmptyCheck(Num#([Sales Cost Amount Legal Entity]),Num#([Sales Cost Amount LC (nst)]))) as [COST_LE]

		,[Settlement Discount LC] 					as [Settlement Discount LC.src]
		,Alt(Num#([Settlement Discount LC]),0) 		as [Settlement Discount LC]
		
		,[Trxn Sales Amount]				as [Trxn Sales Amount.src]
		,Alt(Num#([Trxn Sales Amount]),0)	as [Trxn Sales Amount]
		
		,[Trxn COGS Amount]					as [Trxn COGS Amount.src]
		,Alt(Num#([Trxn COGS Amount]),0)	as [Trxn COGS Amount]

		,[Trans Type]

		,[Co-op Rebate LC] 					as [Co-op Rebate LC.src]
		,Alt(Num#([Co-op Rebate LC]),0) 	as [Co-op Rebate LC]

		,[Rebates LC] 						as [Rebates LC.src]
		,Alt(Num#([Rebates LC]),0) 			as [Rebates LC]

		,[Volume Discount LC] 				as [Volume Discount LC.src]
		,Alt(Num#([Volume Discount LC]),0) 	as [Volume Discount LC]

		,[BOGO] 				as [BOGO.src]
		,Alt(Num#([BOGO]),0) 	as [BOGO]

		,[Slotting] 				as [Slotting.src]
		,Alt(Num#([Slotting]),0) 	as [Slotting]

		,[TPR] 				as [TPR.src]
		,Alt(Num#([TPR]),0) as [TPR]

		,[Other] 				as [Other.src]
		,Alt(Num#([Other]),0) 	as [Other]

		,[COGS Adj 1 LC]				as [COGS Adj 1 LC.src]
		,Alt(Num#([COGS Adj 1 LC]),0)	as [COGS Adj 1 LC]
		
		,[COGS Adj 2 LC]				as [COGS Adj 2 LC.src]
		,Alt(Num#([COGS Adj 2 LC]),0)	as [COGS Adj 2 LC]
		
		,[Type of Discount #]
		,[Type of Discount Name]

		,[Offer #]
		,Null() as [PO Number]
		
		,'Sales' as [Flag]
		;
		
SET pFileSpec = qvd;
SET pCondition = ([Invoice Date]>=$(pStartDate) or alt(ApplyMap('mHReload',upper(FilePath()),0),0)=1)
	and ( 
		([Item Branch Key (inv org #)]<>'DS' or match([Company Number Detail],'10','30','60')<>1 or (left([Invoice Number],2))<>90) 
		and (match([Company Number Detail],'10','30','60')<>1 or (left([Invoice Number],2))<>90) 
		and ([Item Branch Key (inv org #)]<>'DS' or (left([Invoice Number],2))<>90));

CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck, pStartDate);
LET pTable 		= Null(); 
LET pMask 		= Null(); 
LET pLoad 		= Null(); 
LET pFileSpec 	= Null();
LET pCondition 	= Null(); 
LET pFileCheck 	= Null();

IF not IsNull(TableNumber('Sales_PRMS_Transaction')) then

	Left Join ([Sales_PRMS_Transaction])
		LOAD Distinct
			[RN]
			,[FN]
			,1 as [QC]
		Resident [Sales_PRMS_Transaction]
		Where 
			(not [BOGO.src] 					= [BOGO]) or
			(not [Co-op Rebate LC.src] 			= [Co-op Rebate LC]) or
			(not [COGS Trxn Currency] 			= [COGS_FinalCurrency]) or
			(not [GROSS Sales Amount LC.src] 	= [GROSS Sales Amount LC]) or
			(not [Other.src] 					= [Other]) or
			(not [Rebates LC.src] 				= [Rebates LC]) or
			(not [Returns LC.src] 				= [Returns LC]) or
			(not [Sales Cost Amount LC (nst)] 	= [Sales Cost Amount LC (net see thru)]) or
			(not [Sales Cost Amount Legal Entity] = [COST_LE]) or
			(not [Sales Quantity] 				= [Sales Qty]) or
			(not [Settlement Discount LC.src] 	= [Settlement Discount LC]) or
			(not [Slotting.src]					= [Slotting]) or
			(not [TPR.src] 						= [TPR]) or
			(not [Trxn COGS Amount.src] 		= [Trxn COGS Amount]) or
			(not [Trxn Currency] 				= [FinalCurrency]) or
			(not [Trxn Sales Amount.src] 		= [Trxn Sales Amount]) or
			(not [Volume Discount LC.src] 		= [Volume Discount LC])

			;
	IF FieldValueCount('QC') > 0 then
		SET vWhere = and QC <> 0;
		
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'BOGO.src'					,'BOGO'						,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Co-op Rebate LC.src'		,'Co-op Rebate LC'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'COGS Trxn Currency'			,'COGS_FinalCurrency'		,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'GROSS Sales Amount LC.src'	,'GROSS Sales Amount LC'	,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Other.src'					,'Other'					,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Rebates LC.src'				,'Rebates LC'				,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Returns LC.src'				,'Returns LC'				,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Sales Cost Amount LC (nst)'	,'Sales Cost Amount LC (net see thru)'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Sales Cost Amount Legal Entity'	,'COST_LE'				,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Sales Quantity'				,'Sales Qty'				,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Settlement Discount LC.src'	,'Settlement Discount LC'	,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Slotting.src'				,'Slotting'					,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'TPR.src'					,'TPR'						,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Trxn COGS Amount.src'		,'Trxn COGS Amount'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Trxn Currency'				,'FinalCurrency'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Trxn Sales Amount.src'		,'Trxn Sales Amount'		,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Volume Discount LC.src'		,'Volume Discount LC'		,vWhere);
		
		LET vWhere = Null();
		
	ENDIF
	
	
	
	
	/*
		SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
			&replace(
				replace(
					';;'
					&if(not ([BOGO.src] = [BOGO]) ,';[BOGO] "'&[BOGO.src]&'". Replaced with "'&[BOGO]&'";','')
					&if(not ([Co-op Rebate LC.src] = [Co-op Rebate LC]) ,';[Co-op Rebate LC] "'&[Co-op Rebate LC.src]&'". Replaced with "'&[Co-op Rebate LC]&'";','')
					&if(not ([COGS Trxn Currency] = [COGS_FinalCurrency]) ,';[COGS Trxn Currency] "'&[COGS Trxn Currency]&'". Replaced with "'&[COGS_FinalCurrency]&'";','')
					&if(not ([GROSS Sales Amount LC.src] = [GROSS Sales Amount LC]) ,';[GROSS Sales Amount LC] "'&[GROSS Sales Amount LC.src]&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
					&if(not ([Other.src] = [Other]) ,';[Other] "'&[Other.src]&'". Replaced with "'&[Other]&'";','')
					&if(not ([Rebates LC.src] = [Rebates LC]) ,';[Rebates LC] "'&[Rebates LC.src]&'". Replaced with "'&[Rebates LC]&'";','')
					&if(not ([Returns LC.src] = [Returns LC]) ,';[Returns LC] "'&[Returns LC.src]&'". Replaced with "'&[Returns LC]&'";','')
					&if(not ([Sales Cost Amount LC (nst)] = [Sales Cost Amount LC (net see thru)]) ,';[Sales Cost Amount LC (nst)] "'&[Sales Cost Amount LC (nst)]&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
					&if(not ([Sales Cost Amount Legal Entity] = [COST_LE]) ,';[Sales Cost Amount Legal Entity] "'&[Sales Cost Amount Legal Entity]&'". Replaced with "'&[COST_LE]&'";','')
					&if(not ([Sales Quantity] = [Sales Qty]) ,';[Sales Quantity] "'&[Sales Quantity]&'". Replaced with "'&[Sales Qty]&'";','')
					&if(not ([Settlement Discount LC.src] = [Settlement Discount LC]) ,';[Settlement Discount LC] "'&[Settlement Discount LC.src]&'". Replaced with "'&[Settlement Discount LC]&'";','')
					&if(not ([Slotting.src] = [Slotting]) ,';[Slotting] "'&[Slotting.src]&'". Replaced with "'&[Slotting]&'";','')
					&if(not ([TPR.src] = [TPR]) ,';[TPR] "'&[TPR.src]&'". Replaced with "'&[TPR]&'";','')
					&if(not ([Trxn COGS Amount.src] = [Trxn COGS Amount]) ,';[Trxn COGS Amount] "'&[Trxn COGS Amount.src]&'". Replaced with "'&[Trxn COGS Amount]&'";','')
					&if(not ([Trxn Currency] = [FinalCurrency]) ,';[Trxn Currency] "'&[Trxn Currency]&'". Replaced with "'&[FinalCurrency]&'";','')
					&if(not ([Trxn Sales Amount.src] = [Trxn Sales Amount]) ,';[Trxn Sales Amount] "'&[Trxn Sales Amount.src]&'". Replaced with "'&[Trxn Sales Amount]&'";','')
					&if(not ([Volume Discount LC.src] = [Volume Discount LC]) ,';[Volume Discount LC] "'&[Volume Discount LC.src]&'". Replaced with "'&[Volume Discount LC]&'";','')
					&';;'
					,';;;'
					,'')
				,';;'
				,chr(10)&chr(13))
			;
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage);
		LET vMessage = Null();
		*/

	DROP Field [QC] From [Sales_PRMS_Transaction];

	SET pFieldList = [FN]
			,[RN]
			,[Trxn Currency]
			,[COGS Trxn Currency]
			,[FinalCurrency]
			,[COGS_FinalCurrency]
			,[LocalCurrency]
			,[CompoundKey]
			,[Entity]
			,[Customer Number]
			,[Product Number]
			,[ShipToDeliveryLocationID]
			,[CustomerShipToAddressID]
			,[Orginal Invoice]
			,[Inventory Org]
			,[Order Number]
			,[Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[U/M]
			,[Ship Date]
			,[Invoice Date]
			,[Promised Delivery Date]
			,[Date]
			,[Sales Qty]
			,[GROSS Sales Amount LC]
			,[Returns LC]
			,[Sales Cost Amount LC (net see thru)]
			,[Trxn Sales Amount]
			,[Trxn COGS Amount]
			,[BASE_COGS]
			,[COST_LE]
			,[Settlement Discount LC]
			,[Trans Type]
			,[Co-op Rebate LC]
			,[Rebates LC]
			,[Volume Discount LC]
			,[BOGO]
			,[Slotting]
			,[TPR]
			,[Other]
			,[COGS Adj 1 LC]
			,[COGS Adj 2 LC]
			,[Type of Discount #]
			,[Type of Discount Name]
			,[Offer #]
			,[Flag]
			,[PO Number]
			;
			
	SET p_StartDate =  or Num(Date) < $(pStartDate);
	CALL StoreIncremental('Sales_PRMS_Transaction',pFieldList,'MonthStoreFlag','Sales_PRMS',p_StartDate);
	LET pFieldList = Null();
	CALL LogMessage('Sales_PRMS_Transaction',cSUCCESSFUL);

	CALL DropTable('Sales_PRMS_Transaction');

ENDIF;
///$tab PRMS#2
SET pTable = Sales_PRMS_Transaction2;
SET pMask = Transaction\PRMS_QVSALES250_Revised.qvd;
SET pLoad = RecNo() as [RN]
		,FilePath() as [FN]
		
		,[Trxn Currency] 		as [Trxn Currency]
		,[COGS Trxn Currency] 	as [COGS Trxn Currency]
		
		,if(
			Alt(Len(Purgechar([Trxn Currency],$(vPurgeChars))),0)=0
			,[Currency]
			,[Trxn Currency]
			) as [FinalCurrency]
		,if(
			Alt(Len(Purgechar([Trxn Currency],$(vPurgeChars))),0)=0
			,[COGS Trxn Currency]
			,[Trxn Currency]
			) 								as [COGS_FinalCurrency]
		,[Currency] 						as [LocalCurrency]
		,[Currency] 						as [Currency]
		
		,[Currency]&'-'&Text(Date([Invoice Date],'YYMM')) as [CompoundKey]
		
		,Text([Company Number Detail]) 	as [Entity]
		,Text([CustomerID]) 			as [Customer Number]
		,Text(trim([Item Number])) 		as [Product Number]
		
		,[ShipToDeliveryLocationID]
		,Text([CustomerID])&'-'&[ShipToDeliveryLocationID] as [CustomerShipToAddressID]
		
		,[Item Branch Key (inv org #)] 	as [Orginal Invoice]
		,[Item Branch Key (inv org #)]	as [Inventory Org]
		
		,[Order Number]
		,[Order Line Number] 			as [Address Number]
		,[Invoice Number]
		,[Doc Type]
		,[Ansell Std U/M] 				as [U/M]
		
		,Num([Ship Date]) 				as [Ship Date]
		,Num([Invoice Date]) 			as [Invoice Date]
		,Num([Invoice Date]) 			as [Promised Delivery Date]
		,Num([Invoice Date]) 			as [Date]
		,Text(Date([Invoice Date],'YYYY')) as [MonthStoreFlag]
		
		,[Sales Quantity]
		,Alt(Num#([Sales Quantity]),0) as [Sales Qty]
		
		,[GROSS Sales Amount LC] 				as [GROSS Sales Amount LC.src]
		,Alt(Num#([GROSS Sales Amount LC]),0) 	as [GROSS Sales Amount LC]

		,[Returns LC] 				as [Returns LC.src]
		,Alt(Num#([Returns LC]),0) 	as [Returns LC]

		,[Sales Cost Amount LC (nst)]
		,Alt(Num#([Sales Cost Amount LC (nst)]),0) as [Sales Cost Amount LC (net see thru)]
		
		,if(Alt(Num#([Trxn COGS Amount]),0)=0,Alt(Num#([Sales Cost Amount LC (nst)]),0),Alt(Num#([Trxn COGS Amount]),0)) as [BASE_COGS]

		,[Sales Cost Amount Legal Entity]
		,$(eEmptyCheck(Num#([Sales Cost Amount Legal Entity]),Num#([Sales Cost Amount LC (nst)]))) as [COST_LE]

		,[Settlement Discount LC] 				as [Settlement Discount LC.src]
		,Alt(Num#([Settlement Discount LC]),0) 	as [Settlement Discount LC]
		
		,[Trxn Sales Amount]				as [Trxn Sales Amount.src]
		,Alt(Num#([Trxn Sales Amount]),0)	as [Trxn Sales Amount]
		
		,[Trxn COGS Amount]					as [Trxn COGS Amount.src]
		,Alt(Num#([Trxn COGS Amount]),0)	as [Trxn COGS Amount]

		,[Trans Type]

		,[Co-op Rebate LC] 					as [Co-op Rebate LC.src]
		,Alt(Num#([Co-op Rebate LC]),0) 	as [Co-op Rebate LC]

		,[Rebates LC] 						as [Rebates LC.src]
		,Alt(Num#([Rebates LC]),0) 			as [Rebates LC]

		,[Volume Discount LC] 				as [Volume Discount LC.src]
		,Alt(Num#([Volume Discount LC]),0) 	as [Volume Discount LC]

		,[BOGO] 				as [BOGO.src]
		,Alt(Num#([BOGO]),0) 	as [BOGO]

		,[Slotting] 				as [Slotting.src]
		,Alt(Num#([Slotting]),0) 	as [Slotting]

		,[TPR] 				as [TPR.src]
		,Alt(Num#([TPR]),0) as [TPR]

		,[Other] 				as [Other.src]
		,Alt(Num#([Other]),0) 	as [Other]

		,[COGS Adj 1 LC]				as [COGS Adj 1 LC.src]
		,Alt(Num#([COGS Adj 1 LC]),0)	as [COGS Adj 1 LC]
		
		,[COGS Adj 2 LC]				as [COGS Adj 2 LC.src]
		,Alt(Num#([COGS Adj 2 LC]),0)	as [COGS Adj 2 LC]
		
		,[Type of Discount #]
		,[Type of Discount Name]

		,[Offer #]
		,Null() as [PO Number]
		
		,'Sales' as [Flag]
		;
SET pFileSpec = qvd;
SET pCondition = ([Invoice Date]>=$(pStartDate) or alt(ApplyMap('mHReload',upper(FilePath()),0),0)=1);

CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck, pStartDate);
LET pTable 		= Null(); 
LET pMask 		= Null();
LET pLoad 		= Null(); 
LET pFileSpec 	= Null();
LET pCondition 	= Null(); 
LET pFileCheck 	= Null();

IF not IsNull(TableNumber('Sales_PRMS_Transaction2')) then

	Left Join ([Sales_PRMS_Transaction2])
		LOAD Distinct
			[RN]
			,[FN]
			,1 as [QC]
		Resident [Sales_PRMS_Transaction2]
		Where 
			(not [BOGO.src] 						= [BOGO]) or
			(not [Co-op Rebate LC.src] 				= [Co-op Rebate LC]) or
			(not [COGS Adj 1 LC.src] 				= [COGS Adj 1 LC]) or
			(not [COGS Adj 2 LC.src] 				= [COGS Adj 2 LC]) or
			(not [COGS Trxn Currency] 				= [COGS_FinalCurrency]) or
			(not [GROSS Sales Amount LC.src] 		= [GROSS Sales Amount LC]) or
			(not [Other.src] 						= [Other]) or
			(not [Rebates LC.src] 					= [Rebates LC]) or
			(not [Returns LC.src] 					= [Returns LC]) or
			(not [Sales Cost Amount LC (nst)] 		= [Sales Cost Amount LC (net see thru)]) or
			(not [Sales Cost Amount Legal Entity] 	= [COST_LE]) or
			(not [Sales Quantity] 					= [Sales Qty]) or
			(not [Settlement Discount LC.src] 		= [Settlement Discount LC]) or
			(not [Slotting.src] 					= [Slotting]) or
			(not [TPR.src] 							= [TPR]) or
			(not [Trxn COGS Amount.src] 			= [Trxn COGS Amount]) or
			(not [Trxn Currency] 					= [FinalCurrency]) or
			(not [Trxn Sales Amount.src] 			= [Trxn Sales Amount]) or
			(not [Volume Discount LC.src] 			= [Volume Discount LC]) 
			;

	IF FieldValueCount('QC') > 0 then
		SET vWhere = and QC <> 0;
		
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'BOGO.src'					,'BOGO'						,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Co-op Rebate LC.src'		,'Co-op Rebate LC'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'COGS Adj 1 LC.src'			,'COGS Adj 1 LC'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'COGS Adj 2 LC.src'			,'COGS Adj 2 LC'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'COGS Trxn Currency'		,'COGS_FinalCurrency'		,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'GROSS Sales Amount LC.src'	,'GROSS Sales Amount LC'	,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Other.src'					,'Other'					,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Rebates LC.src'			,'Rebates LC'				,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Returns LC.src'			,'Returns LC'				,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Sales Cost Amount LC (nst)','Sales Cost Amount LC (net see thru)'	,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Sales Cost Amount Legal Entity'	,'COST_LE'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Sales Quantity'			,'Sales Qty'				,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Settlement Discount LC.src','Settlement Discount LC'	,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Slotting.src'				,'Slotting'					,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'TPR.src'					,'TPR'						,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Trxn COGS Amount.src'		,'Trxn COGS Amount'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Trxn Currency'				,'FinalCurrency'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Trxn Sales Amount.src'		,'Trxn Sales Amount'		,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage,'Volume Discount LC.src'	,'Volume Discount LC'		,vWhere);
		
	ENDIF


	
	/*
	IF FieldValueCount('QC') > 0 then
	
		SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
			&replace(
				replace(
					';;'
					&if(not ([BOGO.src] = [BOGO]) ,';[BOGO] "'&[BOGO.src]&'". Replaced with "'&[BOGO]&'";','')
					&if(not ([Co-op Rebate LC.src] = [Co-op Rebate LC]) ,';[Co-op Rebate LC] "'&[Co-op Rebate LC.src]&'". Replaced with "'&[Co-op Rebate LC]&'";','')
					&if(not ([COGS Adj 1 LC.src] = [COGS Adj 1 LC]) ,';[COGS Adj 1 LC] "'&[COGS Adj 1 LC.src]&'". Replaced with "'&[COGS Adj 1 LC]&'";','')
					&if(not ([COGS Adj 2 LC.src] = [COGS Adj 2 LC]) ,';[COGS Adj 2 LC] "'&[COGS Adj 2 LC.src]&'". Replaced with "'&[COGS Adj 2 LC]&'";','')
					&if(not ([COGS Trxn Currency] = [COGS_FinalCurrency]) ,';[COGS Trxn Currency] "'&[COGS Trxn Currency]&'". Replaced with "'&[COGS_FinalCurrency]&'";','')
					&if(not ([GROSS Sales Amount LC.src] = [GROSS Sales Amount LC]) ,';[GROSS Sales Amount LC] "'&[GROSS Sales Amount LC.src]&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
					&if(not ([Other.src] = [Other]) ,';[Other] "'&[Other.src]&'". Replaced with "'&[Other]&'";','')
					&if(not ([Rebates LC.src] = [Rebates LC]) ,';[Rebates LC] "'&[Rebates LC.src]&'". Replaced with "'&[Rebates LC]&'";','')
					&if(not ([Returns LC.src] = [Returns LC]) ,';[Returns LC] "'&[Returns LC.src]&'". Replaced with "'&[Returns LC]&'";','')
					&if(not ([Sales Cost Amount LC (nst)] = [Sales Cost Amount LC (net see thru)]) ,';[Sales Cost Amount LC (nst)] "'&[Sales Cost Amount LC (nst)]&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
					&if(not ([Sales Cost Amount Legal Entity] = [COST_LE]) ,';[Sales Cost Amount Legal Entity] "'&[Sales Cost Amount Legal Entity]&'". Replaced with "'&[COST_LE]&'";','')
					&if(not ([Sales Quantity] = [Sales Qty]) ,';[Sales Quantity] "'&[Sales Quantity]&'". Replaced with "'&[Sales Qty]&'";','')
					&if(not ([Settlement Discount LC.src] = [Settlement Discount LC]) ,';[Settlement Discount LC] "'&[Settlement Discount LC.src]&'". Replaced with "'&[Settlement Discount LC]&'";','')
					&if(not ([Slotting.src] = [Slotting]) ,';[Slotting] "'&[Slotting.src]&'". Replaced with "'&[Slotting]&'";','')
					&if(not ([TPR.src] = [TPR]) ,';[TPR] "'&[TPR.src]&'". Replaced with "'&[TPR]&'";','')
					&if(not ([Trxn COGS Amount.src] = [Trxn COGS Amount]) ,';[Trxn COGS Amount] "'&[Trxn COGS Amount.src]&'". Replaced with "'&[Trxn COGS Amount]&'";','')
					&if(not ([Trxn Currency] = [FinalCurrency]) ,';[Trxn Currency] "'&[Trxn Currency]&'". Replaced with "'&[FinalCurrency]&'";','')
					&if(not ([Trxn Sales Amount.src] = [Trxn Sales Amount]) ,';[Trxn Sales Amount] "'&[Trxn Sales Amount.src]&'". Replaced with "'&[Trxn Sales Amount]&'";','')
					&if(not ([Volume Discount LC.src] = [Volume Discount LC]) ,';[Volume Discount LC] "'&[Volume Discount LC.src]&'". Replaced with "'&[Volume Discount LC]&'";','')
					&';;'
					,';;;'
					,'')
				,';;'
				,chr(10)&chr(13))
			;
		CALL LogMessage('Sales_PRMS_Transaction2',cWARNING,vMessage);
		LET vMessage = Null();
	
	ENDIF;
	*/
	DROP Field [QC] From [Sales_PRMS_Transaction2];

	SET pFieldList = [FN]
			,[RN]
			,[Trxn Currency]
			,[COGS Trxn Currency]
			,[FinalCurrency]
			,[COGS_FinalCurrency]
			,[LocalCurrency]
			,[CompoundKey]
			,[Entity]
			,[Customer Number]
			,[Product Number]
			,[ShipToDeliveryLocationID]
			,[CustomerShipToAddressID]
			,[Orginal Invoice]
			,[Inventory Org]
			,[Order Number]
			,[Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[U/M]
			,[Ship Date]
			,[Invoice Date]
			,[Promised Delivery Date]
			,[Date]
			,[Sales Qty]
			,[GROSS Sales Amount LC]
			,[Returns LC]
			,[Sales Cost Amount LC (net see thru)]
			,[Trxn Sales Amount]
			,[Trxn COGS Amount]
			,[BASE_COGS]
			,[COST_LE]
			,[Settlement Discount LC]
			,[Trans Type]
			,[Co-op Rebate LC]
			,[Rebates LC]
			,[Volume Discount LC]
			,[BOGO]
			,[Slotting]
			,[TPR]
			,[Other]
			,[COGS Adj 1 LC]
			,[COGS Adj 2 LC]
			,[Type of Discount #]
			,[Type of Discount Name]
			,[Offer #]
			,[Flag]
			,[PO Number]
			;
			
	SET p_StartDate =  or Num(Date) < $(pStartDate);
	CALL StoreIncremental('Sales_PRMS_Transaction2',pFieldList,'MonthStoreFlag','Sales_PRMS',p_StartDate);
	LET pFieldList = Null();
	CALL LogMessage('Sales_PRMS_Transaction2',cSUCCESSFUL);

	CALL DropTable('Sales_PRMS_Transaction2');

ENDIF;
///$tab Logs
CALL DelLog ('$(vLOGPath)','$(vLogDocPrefixName)',$(vLogCountSaveLoad))

LET vReloadTime = Timestamp(vReloadTime,'YYYYMMDDhhmmss');

LOG:
LOAD
	RecNo() as [LOG.RN]
	,[Module]
	,[ReloadTime]
	,[TABLE]
	,[STATUS]
	,IF(STATUS = 'WARNING','Line #'&([REC_NO])&' in field ['&[MESSAGE]&'] data was replaced from value "'&FromValue&'" to value "'&ToValue&'"
	Source file: "'&FN&'"', MESSAGE)	as MESSAGE
	,REC_NO
    ,FromValue
    ,ToValue
	,if([STATUS] = 'WARNING ON DOUBLES'
		,'DOUBLES'
		,TextBetween([MESSAGE],'[',']',1)) as [FILENAME],
	FN									as [File name]
FROM
[$(vLOGPath)$(vLogDocPrefixName)*$(vReloadTime).qvd]
(qvd)
//Where Upper([Module]) = Upper(DocumentPath())
;
	
	[Log_Error]:
	LOAD 	Module,
			STATUS,
			//TABLE,
			COUNT(STATUS) as QtyWorning
	Resident LOG
	Where STATUS <> 'FAILURE'
	Group BY 	Module,
				STATUS/*,
				TABLE*/;
	
	IF NoOfFields('Log_Error') then	
		STORE Log_Error into '$(vLOGPath)$(vLogTotalPrefixName)Error_$(vReloadTime).qvd' (qvd);
		
		DROP Table Log_Error;
	ENDIF	

	CALL DelLog ('$(vLOGPath)','$(vLogDocPrefixName)',$(vLogCountSaveLoad))
	
		[Log_FAILURE]:
		NoConcatenate LOAD 	*
		Resident LOG
		Where STATUS = 'FAILURE';
	
	IF NoOfFields('Log_FAILURE') then	
		STORE Log_FAILURE into '$(vLOGPath)$(vLogTotalPrefixName)FAILURE_$(vReloadTime).qvd' (qvd);
		
		DROP Table Log_FAILURE;
	ENDIF	

	CALL DelLog ('$(vLOGPath)','$(vLogTotalPrefixName)',$(vLogCountSaveLoad))
///$tab Mail
CALL FailuresInTransformMessage('');
///$tab Exit script
EXIT SCRIPT;
///$tab PRMS_BSSI_APS_MAD_F16
SET pTable = Sales_PRMS_Transaction;
SET pMask = FileToLoad.qvd;
SET pLoad = RecNo() as [RN]
		,FilePath() as [FN]
		,If([FileToLoad.TrxnCurrency]  <> [FileToLoad.COGSTrxnCurrency] ,SubField(2&'_'&3,'_'),1)	
													as FlagCheckCurrency
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.TrxnCurrency], [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency]) 
													as [Trxn Currency]
		//,[FileToLoad.TrxnCurrency] 				as [Trxn Currency]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency],[FileToLoad.COGSTrxnCurrency]),[FileToLoad.COGSTrxnCurrency],IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency],[FileToLoad.COGSTrxnCurrency])) 
													as [COGS Trxn Currency]
		//,[FileToLoad.COGSTrxnCurrency] 			as [COGS Trxn Currency]
				
		,[FileToLoad.TrxnCurrency] 					as [FinalCurrency]
		,[FileToLoad.COGSTrxnCurrency] 				as [COGS_FinalCurrency]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.TrxnCurrency], [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency]) 
													as [LocalCurrency]
		//,[FileToLoad.Currency] 					as [LocalCurrency]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.TrxnCurrency], [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency]) 
													as [Currency]
		//,[FileToLoad.Currency] 					as [Currency]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency] ,[FileToLoad.TrxnCurrency]) ,[FileToLoad.COGSTrxnCurrency] ,IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],[FileToLoad.TrxnCurrency] ,[FileToLoad.TrxnCurrency])) 
		&'-'&Text(Date([FileToLoad.InvoiceDate],'YYMM')) 
													as [CompoundKey]
		
		,Text([FileToLoad.Entity]) 					as [Entity]
		,Text([FileToLoad.CustomerNumber]) 			as [Customer Number]
		,Text(trim([FileToLoad.ProductNumber])) 	as [Product Number]
		
		,[FileToLoad.CustomerShipToAddressID] 		as [ShipToDeliveryLocationID]
		,[FileToLoad.CustomerShipToAddressID] 		as [CustomerShipToAddressID]
		
		,0 											as [Orginal Invoice]
		,0 											as [Inventory Org]
		
		,0 											as [Order Number]
		,[FileToLoad.InvoiceLine] 					as [Address Number]
		,[FileToLoad.InvoiceNumber] 				as [Invoice Number]
		,0 											as [Doc Type]
		,0 											as [U/M]
		
		,Num([FileToLoad.ShipDate]) 				as [Ship Date]
		,Num([FileToLoad.InvoiceDate]) 				as [Invoice Date]
		,Num([FileToLoad.InvoiceDate]) 				as [Promised Delivery Date]
		,Num([FileToLoad.InvoiceDate]) 				as [Date]
		,Text(Date([FileToLoad.InvoiceDate],'YYYY')) 
													as [MonthStoreFlag]
		
		,[FileToLoad.Quantity] 						as [Sales Quantity]
		,Alt(Num#([FileToLoad.Quantity]),0) 		as [Sales Qty]
		
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.GrossSales], 0,[FileToLoad.GrossSales]) 
													as [GROSS Sales Amount LC.src]								
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.GrossSales]),0), 0,Alt(Num#([FileToLoad.GrossSales]),0)) 
													as [GROSS Sales Amount LC]							
		//,[FileToLoad.GrossSales] 					as [GROSS Sales Amount LC.src]
		//,Alt(Num#([FileToLoad.GrossSales]),0) 	as [GROSS Sales Amount LC]

		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.ReturnsLC], 0,[FileToLoad.ReturnsLC]) 
													as [Returns LC.src]						
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.ReturnsLC]),0), 0,Alt(Num#([FileToLoad.ReturnsLC]),0)) 
													as [Returns LC]
		//,[FileToLoad.ReturnsLC] 					as [Returns LC.src]
		//,Alt(Num#([FileToLoad.ReturnsLC]),0) 		as [Returns LC]

		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,[FileToLoad.COGS]), [FileToLoad.COGS], IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,[FileToLoad.COGS])) 
													as [Sales Cost Amount LC (nst)]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0)),Alt(Num#([FileToLoad.COGS]),0) , IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0))) 
													as [Sales Cost Amount LC (net see thru)]	
		//,[FileToLoad.COGS] 						as [Sales Cost Amount LC (nst)]
		//,Alt(Num#([FileToLoad.COGS]),0) 			as [Sales Cost Amount LC (net see thru)]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0)),Alt(Num#([FileToLoad.COGS]),0) , IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0))) 
													as [BASE_COGS]	
		//,Alt(Num#([FileToLoad.COGS]),0) 			as [BASE_COGS]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0)),Alt(Num#([FileToLoad.COGS]),0) , IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0))) 
													as [Sales Cost Amount Legal Entity]	
		//,Alt(Num#([FileToLoad.COGS]),0) 			as [Sales Cost Amount Legal Entity]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0)),Alt(Num#([FileToLoad.COGS]),0) , IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGS]),0))) 
													as [COST_LE]
		//,Alt(Num#([FileToLoad.COGS]),0) 			as [COST_LE]

		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.SettlementDiscountLC], 0,[FileToLoad.SettlementDiscountLC]) 
													as [Settlement Discount LC.src]						
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.SettlementDiscountLC]),0), 0,Alt(Num#([FileToLoad.SettlementDiscountLC]),0)) 
													as [Settlement Discount LC]
		//,[FileToLoad.SettlementDiscountLC] 		as [Settlement Discount LC.src]
		//,Alt(Num#([FileToLoad.SettlementDiscountLC]),0) 		
		//											as [Settlement Discount LC]
		
		,[FileToLoad.TrxnSalesAmount]				as [Trxn Sales Amount.src]
		,Alt(Num#([FileToLoad.TrxnSalesAmount]),0)	as [Trxn Sales Amount]
		
		,[FileToLoad.COGS]							as [Trxn COGS Amount.src]
		,Alt(Num#([FileToLoad.COGS]),0)				as [Trxn COGS Amount]

		,0 											as [Trans Type]

		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.CoopRebateLC], 0,[FileToLoad.CoopRebateLC]) 
													as [Co-op Rebate LC.src]					
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.CoopRebateLC]),0), 0,Alt(Num#([FileToLoad.CoopRebateLC]),0)) 
													as [Co-op Rebate LC]
		//,[FileToLoad.CoopRebateLC] 				as [Co-op Rebate LC.src]
		//,Alt(Num#([FileToLoad.CoopRebateLC]),0) 	as [Co-op Rebate LC]
	
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.RebatesLC], 0,[FileToLoad.RebatesLC]) 
													as [Rebates LC.src]			
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.RebatesLC]),0), 0,Alt(Num#([FileToLoad.RebatesLC]),0)) 
													as [Rebates LC]
		//,[FileToLoad.RebatesLC] 					as [Rebates LC.src]
		//,Alt(Num#([FileToLoad.RebatesLC]),0) 		as [Rebates LC]

		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.VolumeDiscountLC], 0,[FileToLoad.VolumeDiscountLC]) 
													as [Volume Discount LC.src]		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.VolumeDiscountLC]),0), 0,Alt(Num#([FileToLoad.VolumeDiscountLC]),0)) 
													as [Volume Discount LC]
		//,[FileToLoad.VolumeDiscountLC] 				as [Volume Discount LC.src]
		//,Alt(Num#([FileToLoad.VolumeDiscountLC]),0) as [Volume Discount LC]

		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.BOGO], 0,[FileToLoad.BOGO]) 
													as [BOGO.src]	
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.BOGO]),0), 0,Alt(Num#([FileToLoad.BOGO]),0)) 
													as [BOGO]
		//,[FileToLoad.BOGO] 						as [BOGO.src]
		//,Alt(Num#([FileToLoad.BOGO]),0) 			as [BOGO]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.Slotting], 0,[FileToLoad.Slotting]) 
													as [Slotting.src]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.Slotting]),0), 0,Alt(Num#([FileToLoad.Slotting]),0)) 
													as [Slotting]
		//,[FileToLoad.Slotting] 					as [Slotting.src]
		//,Alt(Num#([FileToLoad.Slotting]),0) 		as [Slotting]

		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.TPR], 0,[FileToLoad.TPR]) 
													as [TPR.src]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.TPR]),0), 0,Alt(Num#([FileToLoad.TPR]),0)) 
													as [TPR]
		//,[FileToLoad.TPR] 						as [TPR.src]
		//,Alt(Num#([FileToLoad.TPR]),0) 			as [TPR]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.Other], 0,[FileToLoad.Other]) 
													as [Other.src]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.Other]),0), 0,Alt(Num#([FileToLoad.Other]),0)) 
													as [Other]
		//,[FileToLoad.Other] 						as [Other.src]
		//,Alt(Num#([FileToLoad.Other]),0) 			as [Other]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),[FileToLoad.COGSAdj1], 0,[FileToLoad.COGSAdj1]) 
													as [COGS Adj 1 LC.src]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1),Alt(Num#([FileToLoad.COGSAdj1]),0), 0,Alt(Num#([FileToLoad.COGSAdj1]),0)) 
													as [COGS Adj 1 LC]
		//,[FileToLoad.COGSAdj1]					as [COGS Adj 1 LC.src]
		//,Alt(Num#([FileToLoad.COGSAdj1]),0)		as [COGS Adj 1 LC]
		
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,[FileToLoad.COGSAdj2]), [FileToLoad.COGSAdj2], IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,[FileToLoad.COGSAdj2])) 
													as [COGS Adj 2 LC.src]
		,Pick(Alt(Peek('FlagCheckCurrency',-1,'Sales_PRMS_Transaction'),1), IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGSAdj2]),0)), Alt(Num#([FileToLoad.COGSAdj2]),0),  IF([FileToLoad.TrxnCurrency] <> [FileToLoad.COGSTrxnCurrency],0 ,Alt(Num#([FileToLoad.COGSAdj2]),0))) 
													as [COGS Adj 2 LC]
		//,[FileToLoad.COGSAdj2]					as [COGS Adj 2 LC.src]
		//,Alt(Num#([FileToLoad.COGSAdj2]),0)		as [COGS Adj 2 LC]
		
		,0 											as [Type of Discount #]
		,0 											as [Type of Discount Name]

		,0 											as [Offer #]
		
		,'Sales-'&FileToLoad.SourceType				as [Flag]
		;
		
SET pFileSpec = qvd;
SET pCondition = [FileToLoad.InvoiceDate]>=$(pStartDate);

CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck, pStartDate);
LET pTable 		= Null(); 
LET pMask 		= Null(); 
LET pLoad 		= Null(); 
LET pFileSpec 	= Null();
LET pCondition 	= Null(); 
LET pFileCheck 	= Null();

IF not IsNull(TableNumber('Sales_PRMS_Transaction')) then

	Left Join ([Sales_PRMS_Transaction])
		LOAD Distinct
			[RN]
			,[FN]
			,1 as [QC]
		Resident [Sales_PRMS_Transaction]
		Where 
			(not [BOGO.src] 					= [BOGO]) or
			(not [Co-op Rebate LC.src] 			= [Co-op Rebate LC]) or
			(not [COGS Trxn Currency] 			= [COGS_FinalCurrency]) or
			(not [GROSS Sales Amount LC.src] 	= [GROSS Sales Amount LC]) or
			(not [Other.src] 					= [Other]) or
			(not [Rebates LC.src] 				= [Rebates LC]) or
			(not [Returns LC.src] 				= [Returns LC]) or
			(not [Sales Cost Amount LC (nst)] 	= [Sales Cost Amount LC (net see thru)]) or
			(not [Sales Cost Amount Legal Entity] = [COST_LE]) or
			(not [Sales Quantity] 				= [Sales Qty]) or
			(not [Settlement Discount LC.src] 	= [Settlement Discount LC]) or
			(not [Slotting.src]					= [Slotting]) or
			(not [TPR.src] 						= [TPR]) or
			(not [Trxn COGS Amount.src] 		= [Trxn COGS Amount]) or
			(not [Trxn Currency] 				= [FinalCurrency]) or
			(not [Trxn Sales Amount.src] 		= [Trxn Sales Amount]) or
			(not [Volume Discount LC.src] 		= [Volume Discount LC])

			;
	IF FieldValueCount('QC') > 0 then
		SET vWhere = and QC <> 0;
		
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'BOGO.src'					,'BOGO'						,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Co-op Rebate LC.src'		,'Co-op Rebate LC'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'COGS Trxn Currency'			,'COGS_FinalCurrency'		,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'GROSS Sales Amount LC.src'	,'GROSS Sales Amount LC'	,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Other.src'					,'Other'					,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Rebates LC.src'				,'Rebates LC'				,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Returns LC.src'				,'Returns LC'				,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Sales Cost Amount LC (nst)'	,'Sales Cost Amount LC (net see thru)'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Sales Cost Amount Legal Entity'	,'COST_LE'				,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Sales Quantity'				,'Sales Qty'				,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Settlement Discount LC.src'	,'Settlement Discount LC'	,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Slotting.src'				,'Slotting'					,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'TPR.src'					,'TPR'						,vWhere);	
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Trxn COGS Amount.src'		,'Trxn COGS Amount'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Trxn Currency'				,'FinalCurrency'			,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Trxn Sales Amount.src'		,'Trxn Sales Amount'		,vWhere);
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage,'Volume Discount LC.src'		,'Volume Discount LC'		,vWhere);
		
		LET vWhere = Null();
		
	ENDIF
	
	
	
	
	/*
		SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
			&replace(
				replace(
					';;'
					&if(not ([BOGO.src] = [BOGO]) ,';[BOGO] "'&[BOGO.src]&'". Replaced with "'&[BOGO]&'";','')
					&if(not ([Co-op Rebate LC.src] = [Co-op Rebate LC]) ,';[Co-op Rebate LC] "'&[Co-op Rebate LC.src]&'". Replaced with "'&[Co-op Rebate LC]&'";','')
					&if(not ([COGS Trxn Currency] = [COGS_FinalCurrency]) ,';[COGS Trxn Currency] "'&[COGS Trxn Currency]&'". Replaced with "'&[COGS_FinalCurrency]&'";','')
					&if(not ([GROSS Sales Amount LC.src] = [GROSS Sales Amount LC]) ,';[GROSS Sales Amount LC] "'&[GROSS Sales Amount LC.src]&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
					&if(not ([Other.src] = [Other]) ,';[Other] "'&[Other.src]&'". Replaced with "'&[Other]&'";','')
					&if(not ([Rebates LC.src] = [Rebates LC]) ,';[Rebates LC] "'&[Rebates LC.src]&'". Replaced with "'&[Rebates LC]&'";','')
					&if(not ([Returns LC.src] = [Returns LC]) ,';[Returns LC] "'&[Returns LC.src]&'". Replaced with "'&[Returns LC]&'";','')
					&if(not ([Sales Cost Amount LC (nst)] = [Sales Cost Amount LC (net see thru)]) ,';[Sales Cost Amount LC (nst)] "'&[Sales Cost Amount LC (nst)]&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
					&if(not ([Sales Cost Amount Legal Entity] = [COST_LE]) ,';[Sales Cost Amount Legal Entity] "'&[Sales Cost Amount Legal Entity]&'". Replaced with "'&[COST_LE]&'";','')
					&if(not ([Sales Quantity] = [Sales Qty]) ,';[Sales Quantity] "'&[Sales Quantity]&'". Replaced with "'&[Sales Qty]&'";','')
					&if(not ([Settlement Discount LC.src] = [Settlement Discount LC]) ,';[Settlement Discount LC] "'&[Settlement Discount LC.src]&'". Replaced with "'&[Settlement Discount LC]&'";','')
					&if(not ([Slotting.src] = [Slotting]) ,';[Slotting] "'&[Slotting.src]&'". Replaced with "'&[Slotting]&'";','')
					&if(not ([TPR.src] = [TPR]) ,';[TPR] "'&[TPR.src]&'". Replaced with "'&[TPR]&'";','')
					&if(not ([Trxn COGS Amount.src] = [Trxn COGS Amount]) ,';[Trxn COGS Amount] "'&[Trxn COGS Amount.src]&'". Replaced with "'&[Trxn COGS Amount]&'";','')
					&if(not ([Trxn Currency] = [FinalCurrency]) ,';[Trxn Currency] "'&[Trxn Currency]&'". Replaced with "'&[FinalCurrency]&'";','')
					&if(not ([Trxn Sales Amount.src] = [Trxn Sales Amount]) ,';[Trxn Sales Amount] "'&[Trxn Sales Amount.src]&'". Replaced with "'&[Trxn Sales Amount]&'";','')
					&if(not ([Volume Discount LC.src] = [Volume Discount LC]) ,';[Volume Discount LC] "'&[Volume Discount LC.src]&'". Replaced with "'&[Volume Discount LC]&'";','')
					&';;'
					,';;;'
					,'')
				,';;'
				,chr(10)&chr(13))
			;
		CALL LogMessage('Sales_PRMS_Transaction',cWARNING,vMessage);
		LET vMessage = Null();
		*/

	DROP Field [QC] From [Sales_PRMS_Transaction];

	SET pFieldList = [FN]
			,[RN]
			,[Trxn Currency]
			,[COGS Trxn Currency]
			,[FinalCurrency]
			,[COGS_FinalCurrency]
			,[LocalCurrency]
			,[CompoundKey]
			,[Entity]
			,[Customer Number]
			,[Product Number]
			,[ShipToDeliveryLocationID]
			,[CustomerShipToAddressID]
			,[Orginal Invoice]
			,[Inventory Org]
			,[Order Number]
			,[Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[U/M]
			,[Ship Date]
			,[Invoice Date]
			,[Promised Delivery Date]
			,[Date]
			,[Sales Qty]
			,[GROSS Sales Amount LC]
			,[Returns LC]
			,[Sales Cost Amount LC (net see thru)]
			,[Trxn Sales Amount]
			,[Trxn COGS Amount]
			,[BASE_COGS]
			,[COST_LE]
			,[Settlement Discount LC]
			,[Trans Type]
			,[Co-op Rebate LC]
			,[Rebates LC]
			,[Volume Discount LC]
			,[BOGO]
			,[Slotting]
			,[TPR]
			,[Other]
			,[COGS Adj 1 LC]
			,[COGS Adj 2 LC]
			,[Type of Discount #]
			,[Type of Discount Name]
			,[Offer #]
			,[Flag]
			;
			
	SET p_StartDate =  or Num(Date) < $(pStartDate);
	CALL StoreIncremental('Sales_PRMS_Transaction',pFieldList,'MonthStoreFlag','Sales_PRMS',p_StartDate);
	LET pFieldList = Null();
	CALL LogMessage('Sales_PRMS_Transaction',cSUCCESSFUL);

	CALL DropTable('Sales_PRMS_Transaction');

ENDIF;
