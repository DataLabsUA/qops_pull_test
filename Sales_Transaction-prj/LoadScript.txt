///$tab License
/*************************************************************************
* 
* Ansell Healthcare, LLC
* DVSTS Ltd.
* CONFIDENTIAL
* __________________
* 
* 2016 Ansell Healthcare, LLC 
* 2016 DVSTS Ltd. 
* All Rights Reserved.
* 
* NOTICE:  All information contained herein is, and remains
* the property of Ansell Healthcare, LLC and DVSTS Ltd. The
* intellectual and technical concepts contained herein are
* proprietary to Ansell Healthcare, LLC and DVSTS Ltd. and
* may be covered by U.S. and Foreign Patents, patents in
* process, and are protected by trade secret or copyright
* law. Dissemination of this information or reproduction of
* this material is strictly forbidden unless prior written
* permission is obtained from Ansell Healthcare, LLC.
*************************************************************************/
 
///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='₹ #,##0.00;₹ -#,##0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='MM/DD/YYYY';
SET TimestampFormat='MM/DD/YYYY hh:mm:ss[.fff]';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';

LET vReloadTime = Num(Now(),'##############');

$(Include=.\Sales_Transactionsettings.qvs);

LET vSrcPath = if(Right(vSrcPath,1) = '\',vSrcPath,vSrcPath&'\');
LET vQVDPath = if(Right(vQVDPath,1) = '\',vQVDPath,vQVDPath&'\');

$(Include=$(vINCPath)procedures.qvs);
$(Include=$(vINCPath)\transformmailprocedures.qvs);

SET vPurgeChars = Chr(9)&Chr(10)&Chr(13)&Chr(32)&Chr(160)&Chr(12288)&'-';
SET vRegionList = 'NA','EMEA', 'APAC' ,'Central','LAC','Microgard';

IF vReloadAll then

	EXECUTE powershell -Command "& {remove-item '$(vQVDPath)Sales_Transaction-*.qvd' -Force}";

	LET vReloadAll = False();

ENDIF

CALL FindStartDate('Sales_Transaction', 'pStartDate');
LET pStartDate = RangeMin(pStartDate,alt(vIncStartDate+1,MonthStart(Today(0)-45,-1)));
///$tab Test
///$tab Microgard
SET pTable 	= Sales_Transaction_Microgard;
SET pMask 	= Microgard\Transactions\Sales*.xlsx;
SET pLoad = RecNo() as [RN]
		,FilePath() as [FN]

		,[Trxn Currency]
		,if(
			Alt(Len(Purgechar([Trxn Currency],$(vPurgeChars))),0)=0
			,[Currency]
			,[Trxn Currency]
			) 							as [FinalCurrency]
		
		,[COGS Trxn Currency]
		,if(
			Alt(Len(Purgechar([COGS Trxn Currency],$(vPurgeChars))),0)=0
			,[Currency]
			,[COGS Trxn Currency]
			) 							as [COGS_FinalCurrency]

		,[Currency] 					as [LocalCurrency]
		,[Currency] 					as [Currency]
		
		,[Currency]&'-'&Text(Date([Invoice Date],'YYMM')) as [CompoundKey]
		
		,Text([Company Number Detail]) 	as [Entity]
		,Text(Trim([CustomerID])) 		as [Customer Number]
		,Text(Trim([Item Number])) 		as [Product Number]
		
		,[ShipToDeliveryLocationID]
		
		,Trim([CustomerID]) & '-' & Trim([ShipToDeliveryLocationID]) as [CustomerShipToAddressID]
		
		,[ItemBranchKey] 				as [Orginal Invoice]
		,[ItemBranchKey] 				as [Inventory Org]
		,[Order Line Number] 			as [Order Number]
		,0 								as [Address Number]
		,[Invoice Number]
		
		,[Doc Type]
		,[Ansell Std U/M] 				as [U/M]
		
		,Num([Ship Date]) 				as [Ship Date]
		,Num([Invoice Date]) 			as [Invoice Date]
		,Num([Invoice Date]) 			as [Promised Delivery Date]
		,Num([Invoice Date]) 			as [Date]
		,Text(Date([Invoice Date],'YYYY')) as [MonthStoreFlag]
		
		,[Sales Quantity]
		,Alt(Num#([Sales Quantity]),0) 	as [Sales Qty]
		
		,[Gross Sales Amount LC]
		,Alt(Num#([Gross Sales Amount LC]),0) as [GROSS Sales Amount LC]

		,[Returns LC] 						as [Returns LC.src]
		,-Alt(Num#([Returns LC]),0) 		as [Returns LC]

		,[COGS Trxn Amount] 				as [Sales Cost Amount LC (net see thru).src]
		,Alt(Num#([COGS Trxn Amount]),0) 	as [Sales Cost Amount LC (net see thru)]
		
		,[Trxn Sales Amount] 				as [Trxn Sales Amount.src]
		,Alt(Num#([Trxn Sales Amount]),0) 	as [Trxn Sales Amount]

		,[COGS Trxn Amount]
		,Alt(Num#([COGS Trxn Amount]),0) as [Trxn COGS Amount]
		,$(eEmptyCheck(Num#([COGS Trxn Amount]),0)) as [COST_LE]
		
		,RangeSum(Alt(Num#([COGS Trxn Amount])),Alt(Num#([COGS Adj 1 LC])),Alt(Num#([COGS Adj 2 LC]))) as [BASE_COGS]

		,[Settlement Discount LC] 				as [Settlement Discount LC.src]
		,-Alt(Num#([Settlement Discount LC]),0) as [Settlement Discount LC]

//		,[Co-op Rebate LC] 					as [Co-op Rebate LC.src]
//		,Alt(Num#([Co-op Rebate LC]),0) 	as [Co-op Rebate LC]
		,0 	as [Co-op Rebate LC.src]
		,0 	as [Co-op Rebate LC]
		
		,[Rebates LC] 						as [Rebates LC.src]
		,Alt(Num#([Rebates LC]),0) 			as [Rebates LC]
		
		,[Volume Discount LC] 				as [Volume Discount LC.src]
		,Alt(Num#([Volume Discount LC]),0)	as [Volume Discount LC]

		,[BOGO] 							as [BOGO.src]
		,Alt(Num#([BOGO]),0) 				as [BOGO]

		,[Slotting] 						as [Slotting.src]
		,Alt(Num#([Slotting]),0) 			as [Slotting]

		,[TPR] 								as [TPR.src]
		,Alt(Num#([TPR]),0) 				as [TPR]

		,[Other] 							as [Other.src]
		,Alt(Num#([Other]),0) 				as [Other]

		,[Trans Type]

		,[COGS Adj 1 LC] 						as [COGS Adj 1 LC.src]
		,$(eEmptyCheck(Num#([COGS Adj 1 LC]),0)) as [COGS Adj 1 LC]
		
		,[COGS Adj 2 LC] 						as [COGS Adj 2 LC.src]
		,$(eEmptyCheck(Num#([COGS Adj 2 LC]),0)) as [COGS Adj 2 LC]

		,[Type of Discount #]
		,[Type of Discount Name]

		,[Offer #]
		,Null() as [PO Number]
		
		,'Sales' as [Flag]
		;
SET pFileSpec 	= ooxml, embedded labels, table is Transactions;
SET pCondition 	= ([Invoice Date] >= $(pStartDate) or alt(ApplyMap('mHReload',upper(FilePath()),0),0)=1);

CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck);
LET pTable 		= Null(); 
LET pMask 		= Null(); 
LET pLoad 		= Null(); 
LET pFileSpec 	= Null();
LET pCondition 	= Null(); 
LET pFileCheck 	= Null();

IF not IsNull(TableNumber('Sales_Transaction_Microgard')) then

	Left Join ([Sales_Transaction_Microgard])
		LOAD Distinct
			[RN]
			,[FN]
			,1 as [QC]
		Resident [Sales_Transaction_Microgard]
		Where 
			   (not [Trxn Currency] 							= [FinalCurrency])
			or (not [COGS Trxn Currency] 						= [COGS_FinalCurrency])
			or (not [Sales Quantity] 							= [Sales Qty])
			or (not [Gross Sales Amount LC] 					= [GROSS Sales Amount LC])
			or (not [Returns LC.src] 							= [Returns LC])
			or (not [Sales Cost Amount LC (net see thru).src]	= [Sales Cost Amount LC (net see thru)])
			or (not [Trxn Sales Amount.src] 					= [Trxn Sales Amount])
			or (not [COGS Trxn Amount]						 	= [Trxn COGS Amount])
			or (not [Settlement Discount LC.src] 				= [Settlement Discount LC])
			or (not [Co-op Rebate LC.src]						= [Co-op Rebate LC])
			or (not [Rebates LC.src] 							= [Rebates LC])
			or (not [Volume Discount LC.src]					= [Volume Discount LC])
			or (not [BOGO.src]			 						= [BOGO])
			or (not [Slotting.src]	 							= [Slotting])
			or (not [TPR.src]			 						= [TPR])
			or (not [Other.src]			 						= [Other])
			or (not [COGS Adj 1 LC.src]			 				= [COGS Adj 1 LC])
			or (not [COGS Adj 2 LC.src]			 				= [COGS Adj 2 LC])
			;
			
	IF FieldValueCount('QC') > 0 then
		SET vWhere = and QC <> 0;
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Trxn Currency'			,'FinalCurrency'		,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'COGS Trxn Currency'	,'COGS_FinalCurrency'	,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Sales Quantity'		,'Sales Qty'			,vWhere);	
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Gross Sales Amount LC','GROSS Sales Amount LC' ,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Returns LC.src'		,'Returns LC'			,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Sales Cost Amount LC (net see thru).src','Sales Cost Amount LC (net see thru)',vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Trxn Sales Amount.src'	,'Trxn Sales Amount'	,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'COGS Trxn Amount'		,'Trxn COGS Amount'		,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Settlement Discount LC.src','Settlement Discount LC',vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Co-op Rebate LC.src'	,'Co-op Rebate LC'		,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Rebates LC.src'		,'Rebates LC'			,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Volume Discount LC.src','Volume Discount LC'	,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'BOGO.src'				,'BOGO'					,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Slotting.src'			,'Slotting'				,vWhere);	
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'TPR.src'				,'TPR'					,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'Other.src'				,'Other'				,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'COGS Adj 1 LC.src'		,'COGS Adj 1 LC'		,vWhere);
		CALL LogMessage('Sales_Transaction_Microgard',cWARNING,vMessage,'COGS Adj 2 LC.src'		,'COGS Adj 2 LC'		,vWhere);			
		LET vWhere = Null();
	ENDIF
	
	
	
	/*IF FieldValueCount('QC') > 0 then
	
		SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
			&replace(
				replace(
					';;'
					&if(not ([Trxn Currency] 							= [FinalCurrency])							,';[Trxn Currency] "'			&[Trxn Currency] 					&'". Replaced with "'&[FinalCurrency]&'";','')
					&if(not ([COGS Trxn Currency] 						= [COGS_FinalCurrency])						,';[COGS Trxn Currency] "'		&[COGS Trxn Currency]				&'". Replaced with "'&[COGS_FinalCurrency]&'";','')
					&if(not ([Sales Quantity] 							= [Sales Qty])								,';[Sales Quantity] "'			&[Sales Quantity]					&'". Replaced with "'&[Sales Qty]&'";','')
					&if(not ([Gross Sales Amount LC] 					= [GROSS Sales Amount LC])					,';[Gross Sales Amount LC] "'	&[Gross Sales Amount LC]			&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
					&if(not ([Returns LC.src] 							= [Returns LC])								,';[Returns LC] "'				&[Returns LC.src]					&'". Replaced with "'&[Returns LC]&'";','')
					&if(not ([Sales Cost Amount LC (net see thru).src]	= [Sales Cost Amount LC (net see thru)])	,';[COGS Trxn Amount] "'		&[Sales Cost Amount LC (net see thru).src]				&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
					&if(not ([Trxn Sales Amount.src] 					= [Trxn Sales Amount])						,';[Trxn Sales Amount] "'		&[Trxn Sales Amount.src]			&'". Replaced with "'&[Trxn Sales Amount]&'";','')
					&if(not ([COGS Trxn Amount]						 	= [Trxn COGS Amount])						,';[COGS Trxn Amount] "'		&[Trxn COGS Amount]					&'". Replaced with "'&[Trxn COGS Amount]&'";','')
					&if(not ([Settlement Discount LC.src] 				= [Settlement Discount LC])					,';[Settlement Discount LC] "'	&[Settlement Discount LC.src]		&'". Replaced with "'&[Settlement Discount LC]&'";','')
					&if(not ([Co-op Rebate LC.src]						= [Co-op Rebate LC])						,';[Co-op Rebate LC] "'			&[Co-op Rebate LC.src]				&'". Replaced with "'&[Co-op Rebate LC]&'";','')
					&if(not ([Rebates LC.src] 							= [Rebates LC])								,';[Rebates LC] "'				&[Rebates LC.src]					&'". Replaced with "'&[Rebates LC]&'";','')
					&if(not ([Volume Discount LC.src]					= [Volume Discount LC])						,';[Volume Discount LC] "'		&[Volume Discount LC.src]			&'". Replaced with "'&[Volume Discount LC]&'";','')
					&if(not ([BOGO.src]			 						= [BOGO])									,';[BOGO] "'					&[BOGO.src]							&'". Replaced with "'&[BOGO]&'";','')
					&if(not ([Slotting.src]	 							= [Slotting])								,';[Slotting] "'				&[Slotting.src]						&'". Replaced with "'&[Slotting]&'";','')
					&if(not ([TPR.src]			 						= [TPR])									,';[TPR.src] "'					&[TPR.src]							&'". Replaced with "'&[TPR]&'";','')
					&if(not ([Other.src]			 					= [Other])									,';[Other] "'					&[Other.src]						&'". Replaced with "'&[Other]&'";','')
					&if(not ([COGS Adj 1 LC.src]			 			= [COGS Adj 1 LC])							,';[COGS Adj 1 LC] "'			&[COGS Adj 1 LC.src]				&'". Replaced with "'&[COGS Adj 1 LC]&'";','')
					&if(not ([COGS Adj 2 LC.src]			 			= [COGS Adj 2 LC])							,';[COGS Adj 2 LC] "'			&[COGS Adj 2 LC.src]				&'". Replaced with "'&[COGS Adj 2 LC]&'";','')
					&';;'
					,';;;'
					,'')
				,';;'
				,chr(10)&chr(13))
			;
	
	ENDIF;*/
	
	DROP Field [QC] From [Sales_Transaction_Microgard];

	SET pFieldList = [FN]
			,[RN]
			,[Trxn Currency]
			,[COGS Trxn Currency]
			,[FinalCurrency]
			,[COGS_FinalCurrency]
			,[LocalCurrency]
			,[Currency]
			,[CompoundKey]
			,[Entity]
			,[Customer Number]
			,[Product Number]
			,[ShipToDeliveryLocationID]
			,[CustomerShipToAddressID]
			,[Orginal Invoice]
			,[Inventory Org]
			,[Order Number]
			,[Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[U/M]
			,[Ship Date]
			,[Invoice Date]
			,[Promised Delivery Date]
			,[Date]
			,[Sales Qty]
			,[GROSS Sales Amount LC]
			,[Returns LC]
			,[Sales Cost Amount LC (net see thru)]
			,[Trxn Sales Amount]
			,[Trxn COGS Amount]
			,[BASE_COGS]
			,[COST_LE]
			,[Settlement Discount LC]
			,[Trans Type]
			,[Co-op Rebate LC]
			,[Rebates LC]
			,[Volume Discount LC]
			,[BOGO]
			,[Slotting]
			,[TPR]
			,[Other]
			,[COGS Adj 1 LC]
			,[COGS Adj 2 LC]
			,[Type of Discount #]
			,[Type of Discount Name]
			,[Offer #]
			,[Flag]
			,[PO Number]
			;
	
	SET p_StartDate =  or Num(Date) < $(pStartDate);
	CALL StoreIncremental('Sales_Transaction_Microgard',pFieldList,'MonthStoreFlag','Sales_Transaction',p_StartDate);
	LET pFieldList = Null();
	CALL LogMessage('Sales_Transaction_Microgard',cSUCCESSFUL);

	CALL DropTable('Sales_Transaction_Microgard');

ENDIF;
///$tab v09Update
if alt(v09Update,0)=1 THEN

	let vTemp = pStartDate;
	let pStartDate = 0;

	SET pTable = Sales_Transaction_General;
	SET pMask = Transaction\Sales *.xlsx;
	SET pLoad = RecNo() as [RN]
			,FilePath() as [FN]
			
			,[Currency] as [Trxn Currency]
			,[Currency] as [COGS Trxn Currency]
			,[Currency] as [FinalCurrency]
			,[Currency] as [COGS_FinalCurrency]
			,[Currency] as [LocalCurrency]
			,[Currency] as [Currency]
			
			,[Currency]&'-'&Text(Date([Invoice Date],'YYMM')) as [CompoundKey]
			
			,Text([Company Number Detail]) 	as [Entity]
			,Text([CustomerID]) 			as [Customer Number]
			,Text(trim([Item Number])) 		as [Product Number]
			
			,[ShipToDeliveryLocationID] 	as [ShipToDeliveryLocationID.src]
			,if(([Company Number Detail]='2000' or [Company Number Detail]='2010') and  [ShipToDeliveryLocationID]='','X',[ShipToDeliveryLocationID]) as [ShipToDeliveryLocationID]
			
			,Text([CustomerID])&'-'&if(([Company Number Detail]='2000' or [Company Number Detail]='2010') and  [ShipToDeliveryLocationID]='','X',[ShipToDeliveryLocationID]) as [CustomerShipToAddressID]
			
			,[Item Branch Key (inv org #)] 	as [Orginal Invoice]
			,[Item Branch Key (inv org #)] 	as [Inventory Org]
			
			,[Order Number]
			,[Order Line Number]			as [Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[Ansell Std U/M] 				as [U/M]
			
			,Num([Ship Date]) 				as [Ship Date]
			,Num([Invoice Date]) 			as [Invoice Date]
			,Num([Invoice Date]) 			as [Promised Delivery Date]
			,Num([Invoice Date]) 			as [Date]
			,Text(Date([Invoice Date],'YYYY')) as [MonthStoreFlag]
			
			,[Sales Quantity]
			,Alt(Num#([Sales Quantity]),0) as [Sales Qty]
			
			,[GROSS Sales Amount   LC]
			,Alt(NUM#([GROSS Sales Amount   LC]),0) as [GROSS Sales Amount LC]
	
			,[Returns LC] 				as [Returns LC.src]
			,Alt(Num#([Returns LC]),0) 	as [Returns LC]
	
			,[Sales Cost Amount LC (net see thru)] as [Sales Cost Amount LC (net see thru).src]
			,Alt(Num#([Sales Cost Amount LC (net see thru)]),0) as [Sales Cost Amount LC (net see thru)]
			,Alt(Num#([Sales Cost Amount LC (net see thru)]),0) as [BASE_COGS]
	
			,[Sales Cost Amount Legal Entity]
			,if(match( [Company Number Detail],'2120') and Year ([Invoice Date]) < 2015 and  Num(Date(MonthStart([Invoice Date] ), 'MMMYY'))>41791
	 			,$(eEmptyCheck(Num#([Sales Cost Amount LC (net see thru)]),0))
	 			,$(eEmptyCheck(Num#([Sales Cost Amount Legal Entity]),Num#([Sales Cost Amount LC (net see thru)])))
	 			) as [COST_LE]
	
			,[Settlement Discount LC] 				as [Settlement Discount LC.src]
			,Alt(Num#([Settlement Discount LC]),0) 	as [Settlement Discount LC]
			
			,0 as [Trxn Sales Amount]
			,0 as [Trxn COGS Amount]
	
			,0 as [Trans Type]
	
			,[Co-op Rebate LC] 				as [Co-op Rebate LC.src]
			,Alt(Num#([Co-op Rebate LC]),0) as [Co-op Rebate LC]
	
			,[Rebates LC] 					as [Rebates LC.src]
			,Alt(Num#([Rebates LC]),0) 		as [Rebates LC]
	
			,[Volume Discount LC] 				as [Volume Discount LC.src]
			,Alt(Num#([Volume Discount LC]),0) 	as [Volume Discount LC]
	
			,[BOGO] 				as [BOGO.src]
			,Alt(Num#([BOGO]),0) 	as [BOGO]
	
			,[Slotting] 				as [Slotting.src]
			,Alt(Num#([Slotting]),0) 	as [Slotting]
	
			,[TPR] 						as [TPR.src]
			,Alt(Num#([TPR]),0) 		as [TPR]
	
			,[Other] 				as [Other.src]
			,Alt(Num#([Other]),0) 	as [Other]
	
			,0 as [COGS Adj 1 LC]
			,0 as [COGS Adj 2 LC]
			,0 as [Type of Discount #]
			,0 as [Type of Discount Name]
	
			,[Offer #]
			
			,'Sales' as [Flag]
			;
	SET pFileSpec = ooxml, embedded labels, table is [Sheet1];
	SET pCondition = [Invoice Date]>=$(pStartDate) and Year ([Invoice Date]) < 2015
		and (([Invoice Date]  >= makedate(2013) 
			and not match([Company Number Detail],'2120')
			and Date(MonthStart([Invoice Date]))>41791)
			or (match([Company Number Detail],'2120')
				and Year ([Invoice Date]) < 2015
				and Date(MonthStart([Invoice Date]))>41791)
			);
	
	CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck, pStartDate);
	LET pTable 		= Null(); 
	LET pMask 		= Null(); 
	LET pLoad 		= Null(); 
	LET pFileSpec 	= Null();
	LET pCondition 	= Null(); 
	LET pFileCheck 	= Null();
	
	IF not IsNull(TableNumber('Sales_Transaction_General')) then
	
		Left Join ([Sales_Transaction_General])
			LOAD Distinct
				[RN]
				,[FN]
				,1 as [QC]
			Resident [Sales_Transaction_General]
			Where 
				(not [BOGO.src]        							= [BOGO]) or
				(not [Co-op Rebate LC.src]        				= [Co-op Rebate LC]) or
				(not [GROSS Sales Amount   LC]        			= [GROSS Sales Amount LC]) or
				(not [Other.src]        						= [Other]) or
				(not [Rebates LC.src]       					= [Rebates LC]) or
				(not [Returns LC.src]        					= [Returns LC]) or
				(not [Sales Cost Amount LC (net see thru).src]	= [Sales Cost Amount LC (net see thru)]) or
				(not [Sales Cost Amount Legal Entity]        	= [COST_LE]) or
				(not [Sales Quantity]        					= [Sales Qty]) or
				(not [Settlement Discount LC.src]        		= [Settlement Discount LC]) or
				(not [ShipToDeliveryLocationID.src]        		= [ShipToDeliveryLocationID]) or
				(not [Slotting.src]        						= [Slotting]) or
				(not [TPR.src]        							= [TPR]) or
				(not [Volume Discount LC.src]        			= [Volume Discount LC])
				;
	
		IF FieldValueCount('QC') > 0 then
			SET vWhere = and QC <> 0;
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'BOGO.src'				,'BOGO'						,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'GROSS Sales Amount   LC'	,'GROSS Sales Amount LC'	,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Other.src'				,'Other'					,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Rebates LC.src'			,'Rebates LC'				,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Returns LC.src'			,'Returns LC'				,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Sales Cost Amount LC (net see thru).src','Sales Cost Amount LC (net see thru)'		,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Sales Cost Amount Legal Entity','COST_LE'			,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Sales Quantity'			,'Sales Qty'				,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Settlement Discount LC.src','Settlement Discount LC'		,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'ShipToDeliveryLocationID.src','ShipToDeliveryLocationID'	,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Slotting.src'			,'Slotting'					,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'TPR.src'					,'TPR'						,vWhere);
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Volume Discount LC.src'	,'Volume Discount LC'		,vWhere);
			LET vWhere = Null();
		ENDIF
		
		
		
		/*IF FieldValueCount('QC') > 0 then
		
			SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
				&replace(
					replace(
						';;'
						&if(not ([BOGO.src] 								= [BOGO]) 									,';[BOGO] "'						&[BOGO.src]							&'". Replaced with "'&[BOGO]&'";','')
						&if(not ([Co-op Rebate LC.src] 						= [Co-op Rebate LC]) 						,';[Co-op Rebate LC] "'				&[Co-op Rebate LC.src]				&'". Replaced with "'&[Co-op Rebate LC]&'";','')
						&if(not ([GROSS Sales Amount LC] 					= [GROSS Sales Amount LC]) 					,';[GROSS Sales Amount LC] "'		&[GROSS Sales Amount LC]			&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
						&if(not ([Other.src] 								= [Other]) 									,';[Other] "'						&[Other.src]						&'". Replaced with "'&[Other]&'";','')
						&if(not ([Rebates LC.src] 							= [Rebates LC]) 							,';[Rebates LC] "'					&[Rebates LC.src]					&'". Replaced with "'&[Rebates LC]&'";','')
						&if(not ([Returns LC.src] 							= [Returns LC]) 							,';[Returns LC] "'					&[Returns LC.src]					&'". Replaced with "'&[Returns LC]&'";','')
						&if(not ([Sales Cost Amount LC (net see thru).src] 	= [Sales Cost Amount LC (net see thru)]) 	,';[Sales Cost Amount LC (net see thru)] "'&[Sales Cost Amount LC (net see thru).src]	&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
						&if(not ([Sales Cost Amount Legal Entity] 			= [COST_LE]) 								,';[Sales Cost Amount Legal Entity] "'&[Sales Cost Amount Legal Entity]	&'". Replaced with "'&[COST_LE]&'";','')
						&if(not ([Sales Quantity] 							= [Sales Qty]) 								,';[Sales Quantity] "'				&[Sales Quantity]					&'". Replaced with "'&[Sales Qty]&'";','')
						&if(not ([Settlement Discount LC.src] 				= [Settlement Discount LC])					,';[Settlement Discount LC] "'		&[Settlement Discount LC.src]		&'". Replaced with "'&[Settlement Discount LC]&'";','')
						&if(not ([ShipToDeliveryLocationID.src] 			= [ShipToDeliveryLocationID]) 				,';[ShipToDeliveryLocationID] "'	&[ShipToDeliveryLocationID.src]		&'". Replaced with "'&[ShipToDeliveryLocationID]&'";','')
						&if(not ([Slotting.src] 							= [Slotting]) 								,';[Slotting] "'					&[Slotting.src]						&'". Replaced with "'&[Slotting]&'";','')
						&if(not ([TPR.src] 									= [TPR]) 									,';[TPR] "'							&[TPR.src]							&'". Replaced with "'&[TPR]&'";','')
						&if(not ([Volume Discount LC.src] 					= [Volume Discount LC]) 					,';[Volume Discount LC] "'			&[Volume Discount LC.src]			&'". Replaced with "'&[Volume Discount LC]&'";','')
						&';;'
						,';;;'
						,'')
					,';;'
					,chr(10)&chr(13))
				;
			CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage);
			
			LET vMessage = Null();
		
		ENDIF;*/
		
		DROP Field [QC] From [Sales_Transaction_General];
	
		SET pFieldList = [FN]
				,[RN]
				,[Trxn Currency]
				,[COGS Trxn Currency]
				,[FinalCurrency]
				,[COGS_FinalCurrency]
				,[LocalCurrency]
				,[Currency]
				,[CompoundKey]
				,[Entity]
				,[Customer Number]
				,[Product Number]
				,[ShipToDeliveryLocationID]
				,[CustomerShipToAddressID]
				,[Orginal Invoice]
				,[Inventory Org]
				,[Order Number]
				,[Address Number]
				,[Invoice Number]
				,[Doc Type]
				,[U/M]
				,[Ship Date]
				,[Invoice Date]
				,[Promised Delivery Date]
				,[Date]
				,[Sales Qty]
				,[GROSS Sales Amount LC]
				,[Returns LC]
				,[Sales Cost Amount LC (net see thru)]
				,[Trxn Sales Amount]
				,[Trxn COGS Amount]
				,[BASE_COGS]
				,[COST_LE]
				,[Settlement Discount LC]
				,[Trans Type]
				,[Co-op Rebate LC]
				,[Rebates LC]
				,[Volume Discount LC]
				,[BOGO]
				,[Slotting]
				,[TPR]
				,[Other]
				,[COGS Adj 1 LC]
				,[COGS Adj 2 LC]
				,[Type of Discount #]
				,[Type of Discount Name]
				,[Offer #]
				,[Flag]
				;
		
		SET p_StartDate =  or Num(Date) < $(pStartDate) or Year (Date) >= 2015;
		CALL StoreIncremental('Sales_Transaction_General',pFieldList,'MonthStoreFlag','Sales_Transaction',p_StartDate);
		LET pFieldList = Null();
		CALL LogMessage('Sales_Transaction_General',cSUCCESSFUL);
	
		CALL DropTable('Sales_Transaction_General');
	
	ENDIF;

	let pStartDate = vTemp;
	let vTemp = null();
	let v09Update = 0;

ENDIF;
///$tab Transaction
SET pTable = Sales_Transaction_General;
SET pMask = Transaction\Sales*.xlsx;
SET pLoad = RecNo() as [RN]
		,FilePath() as [FN]
		
		,[Currency] as [Trxn Currency]
		,[Currency] as [COGS Trxn Currency]
		,[Currency] as [FinalCurrency]
		,[Currency] as [COGS_FinalCurrency]
		,[Currency] as [LocalCurrency]
		,[Currency] as [Currency]
		
		,[Currency]&'-'&Text(Date([Invoice Date],'YYMM')) as [CompoundKey]
		
		,Text([Company Number Detail]) 	as [Entity]
		,Text([CustomerID]) 			as [Customer Number]
		,Text(trim([Item Number])) 		as [Product Number]
		
		,[ShipToDeliveryLocationID] 	as [ShipToDeliveryLocationID.src]
		,if(([Company Number Detail]='2000' or [Company Number Detail]='2010') and  [ShipToDeliveryLocationID]='','X',[ShipToDeliveryLocationID]) as [ShipToDeliveryLocationID]
		
		,Text([CustomerID])&'-'&if(([Company Number Detail]='2000' or [Company Number Detail]='2010') and  [ShipToDeliveryLocationID]='','X',[ShipToDeliveryLocationID]) as [CustomerShipToAddressID]
		
		,[Item Branch Key (inv org #)] 	as [Orginal Invoice]
		,[Item Branch Key (inv org #)] 	as [Inventory Org]
		
		,[Order Number]
		,[Order Line Number]			as [Address Number]
		,[Invoice Number]
		,[Doc Type]
		,[Ansell Std U/M] 				as [U/M]
		
		,Num([Ship Date]) 				as [Ship Date]
		,Num([Invoice Date]) 			as [Invoice Date]
		,Num([Invoice Date]) 			as [Promised Delivery Date]
		,Num([Invoice Date]) 			as [Date]
		,Text(Date([Invoice Date],'YYYY')) as [MonthStoreFlag]
		
		,[Sales Quantity]
		,Alt(Num#([Sales Quantity]),0) as [Sales Qty]
		
		,[GROSS Sales Amount   LC]
		,Alt(NUM#([GROSS Sales Amount   LC]),0) as [GROSS Sales Amount LC]

		,[Returns LC] 				as [Returns LC.src]
		,Alt(Num#([Returns LC]),0) 	as [Returns LC]

		,[Sales Cost Amount LC (net see thru)] as [Sales Cost Amount LC (net see thru).src]
		,Alt(Num#([Sales Cost Amount LC (net see thru)]),0) as [Sales Cost Amount LC (net see thru)]
		,Alt(Num#([Sales Cost Amount LC (net see thru)]),0) as [BASE_COGS]

		,[Sales Cost Amount Legal Entity]
		,if(match( [Company Number Detail],'2120') and Year ([Invoice Date]) < 2015 and  Num(Date(MonthStart([Invoice Date] ), 'MMMYY'))>41791
 			,$(eEmptyCheck(Num#([Sales Cost Amount LC (net see thru)]),0))
 			,$(eEmptyCheck(Num#([Sales Cost Amount Legal Entity]),Num#([Sales Cost Amount LC (net see thru)])))
 			) as [COST_LE]

		,[Settlement Discount LC] 				as [Settlement Discount LC.src]
		,Alt(Num#([Settlement Discount LC]),0) 	as [Settlement Discount LC]
		
		,0 as [Trxn Sales Amount]
		,0 as [Trxn COGS Amount]

		//CR 410
		//,0 as [Trans Type]
		,if(num([Invoice Date])>=43922
			,if(alt(len(Trim([Trans Type])),0)>0,[Trans Type],0)
			,0)	 as [Trans Type]

		,[Co-op Rebate LC] 				as [Co-op Rebate LC.src]
		,Alt(Num#([Co-op Rebate LC]),0) as [Co-op Rebate LC]

		,[Rebates LC] 					as [Rebates LC.src]
		,Alt(Num#([Rebates LC]),0) 		as [Rebates LC]

		,[Volume Discount LC] 				as [Volume Discount LC.src]
		,Alt(Num#([Volume Discount LC]),0) 	as [Volume Discount LC]

		,[BOGO] 				as [BOGO.src]
		,Alt(Num#([BOGO]),0) 	as [BOGO]

		,[Slotting] 				as [Slotting.src]
		,Alt(Num#([Slotting]),0) 	as [Slotting]

		,[TPR] 						as [TPR.src]
		,Alt(Num#([TPR]),0) 		as [TPR]

		,[Other] 				as [Other.src]
		,Alt(Num#([Other]),0) 	as [Other]

		,0 as [COGS Adj 1 LC]
		,0 as [COGS Adj 2 LC]
		,0 as [Type of Discount #]
		,0 as [Type of Discount Name]

		,[Offer #]
		,Null() as [PO Number]
		
		,'Sales' as [Flag]
		;
SET pFileSpec = ooxml, embedded labels, table is [Sheet1];
SET pCondition = ([Invoice Date] >= $(pStartDate) or alt(ApplyMap('mHReload',upper(FilePath()),0),0)=1)
	and (([Invoice Date]  >= makedate(2013) 
		and not match([Company Number Detail],'2120')
		and Date(MonthStart([Invoice Date]))>41791)
		or (match([Company Number Detail],'2120')
			and Year ([Invoice Date]) < 2015
			and Date(MonthStart([Invoice Date]))>41791)
		);

CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck, pStartDate);
LET pTable 		= Null(); 
LET pMask 		= Null(); 
LET pLoad 		= Null(); 
LET pFileSpec 	= Null();
LET pCondition 	= Null(); 
LET pFileCheck 	= Null();

IF not IsNull(TableNumber('Sales_Transaction_General')) then

	Left Join ([Sales_Transaction_General])
		LOAD Distinct
			[RN]
			,[FN]
			,1 as [QC]
		Resident [Sales_Transaction_General]
		Where 
			(not [BOGO.src]        							= [BOGO]) or
			(not [Co-op Rebate LC.src]        				= [Co-op Rebate LC]) or
			(not [GROSS Sales Amount   LC]        			= [GROSS Sales Amount LC]) or
			(not [Other.src]        						= [Other]) or
			(not [Rebates LC.src]       					= [Rebates LC]) or
			(not [Returns LC.src]        					= [Returns LC]) or
			(not [Sales Cost Amount LC (net see thru).src]	= [Sales Cost Amount LC (net see thru)]) or
			(not [Sales Cost Amount Legal Entity]        	= [COST_LE]) or
			(not [Sales Quantity]        					= [Sales Qty]) or
			(not [Settlement Discount LC.src]        		= [Settlement Discount LC]) or
			(not [ShipToDeliveryLocationID.src]        		= [ShipToDeliveryLocationID]) or
			(not [Slotting.src]        						= [Slotting]) or
			(not [TPR.src]        							= [TPR]) or
			(not [Volume Discount LC.src]        			= [Volume Discount LC])
			;

	IF FieldValueCount('QC') > 0 then
		SET vWhere = and QC <> 0;
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'BOGO.src'				,'BOGO'						,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'GROSS Sales Amount   LC'	,'GROSS Sales Amount LC'	,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Other.src'				,'Other'					,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Rebates LC.src'			,'Rebates LC'				,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Returns LC.src'			,'Returns LC'				,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Sales Cost Amount LC (net see thru).src','Sales Cost Amount LC (net see thru)'		,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Sales Cost Amount Legal Entity','COST_LE'			,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Sales Quantity'			,'Sales Qty'				,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Settlement Discount LC.src','Settlement Discount LC'		,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'ShipToDeliveryLocationID.src','ShipToDeliveryLocationID'	,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Slotting.src'			,'Slotting'					,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'TPR.src'					,'TPR'						,vWhere);
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage,'Volume Discount LC.src'	,'Volume Discount LC'		,vWhere);
		LET vWhere = Null();
	ENDIF
	
	
	
	/*IF FieldValueCount('QC') > 0 then
	
		SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
			&replace(
				replace(
					';;'
					&if(not ([BOGO.src] 								= [BOGO]) 									,';[BOGO] "'						&[BOGO.src]							&'". Replaced with "'&[BOGO]&'";','')
					&if(not ([Co-op Rebate LC.src] 						= [Co-op Rebate LC]) 						,';[Co-op Rebate LC] "'				&[Co-op Rebate LC.src]				&'". Replaced with "'&[Co-op Rebate LC]&'";','')
					&if(not ([GROSS Sales Amount LC] 					= [GROSS Sales Amount LC]) 					,';[GROSS Sales Amount LC] "'		&[GROSS Sales Amount LC]			&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
					&if(not ([Other.src] 								= [Other]) 									,';[Other] "'						&[Other.src]						&'". Replaced with "'&[Other]&'";','')
					&if(not ([Rebates LC.src] 							= [Rebates LC]) 							,';[Rebates LC] "'					&[Rebates LC.src]					&'". Replaced with "'&[Rebates LC]&'";','')
					&if(not ([Returns LC.src] 							= [Returns LC]) 							,';[Returns LC] "'					&[Returns LC.src]					&'". Replaced with "'&[Returns LC]&'";','')
					&if(not ([Sales Cost Amount LC (net see thru).src] 	= [Sales Cost Amount LC (net see thru)]) 	,';[Sales Cost Amount LC (net see thru)] "'&[Sales Cost Amount LC (net see thru).src]	&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
					&if(not ([Sales Cost Amount Legal Entity] 			= [COST_LE]) 								,';[Sales Cost Amount Legal Entity] "'&[Sales Cost Amount Legal Entity]	&'". Replaced with "'&[COST_LE]&'";','')
					&if(not ([Sales Quantity] 							= [Sales Qty]) 								,';[Sales Quantity] "'				&[Sales Quantity]					&'". Replaced with "'&[Sales Qty]&'";','')
					&if(not ([Settlement Discount LC.src] 				= [Settlement Discount LC])					,';[Settlement Discount LC] "'		&[Settlement Discount LC.src]		&'". Replaced with "'&[Settlement Discount LC]&'";','')
					&if(not ([ShipToDeliveryLocationID.src] 			= [ShipToDeliveryLocationID]) 				,';[ShipToDeliveryLocationID] "'	&[ShipToDeliveryLocationID.src]		&'". Replaced with "'&[ShipToDeliveryLocationID]&'";','')
					&if(not ([Slotting.src] 							= [Slotting]) 								,';[Slotting] "'					&[Slotting.src]						&'". Replaced with "'&[Slotting]&'";','')
					&if(not ([TPR.src] 									= [TPR]) 									,';[TPR] "'							&[TPR.src]							&'". Replaced with "'&[TPR]&'";','')
					&if(not ([Volume Discount LC.src] 					= [Volume Discount LC]) 					,';[Volume Discount LC] "'			&[Volume Discount LC.src]			&'". Replaced with "'&[Volume Discount LC]&'";','')
					&';;'
					,';;;'
					,'')
				,';;'
				,chr(10)&chr(13))
			;
		CALL LogMessage('Sales_Transaction_General',cWARNING,vMessage);
		
		LET vMessage = Null();
	
	ENDIF;*/
	
	DROP Field [QC] From [Sales_Transaction_General];

	SET pFieldList = [FN]
			,[RN]
			,[Trxn Currency]
			,[COGS Trxn Currency]
			,[FinalCurrency]
			,[COGS_FinalCurrency]
			,[LocalCurrency]
			,[Currency]
			,[CompoundKey]
			,[Entity]
			,[Customer Number]
			,[Product Number]
			,[ShipToDeliveryLocationID]
			,[CustomerShipToAddressID]
			,[Orginal Invoice]
			,[Inventory Org]
			,[Order Number]
			,[Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[U/M]
			,[Ship Date]
			,[Invoice Date]
			,[Promised Delivery Date]
			,[Date]
			,[Sales Qty]
			,[GROSS Sales Amount LC]
			,[Returns LC]
			,[Sales Cost Amount LC (net see thru)]
			,[Trxn Sales Amount]
			,[Trxn COGS Amount]
			,[BASE_COGS]
			,[COST_LE]
			,[Settlement Discount LC]
			,[Trans Type]
			,[Co-op Rebate LC]
			,[Rebates LC]
			,[Volume Discount LC]
			,[BOGO]
			,[Slotting]
			,[TPR]
			,[Other]
			,[COGS Adj 1 LC]
			,[COGS Adj 2 LC]
			,[Type of Discount #]
			,[Type of Discount Name]
			,[Offer #]
			,[Flag]
			,[PO Number]
			;
	
	SET p_StartDate =  or Num(Date) < $(pStartDate);
	CALL StoreIncremental('Sales_Transaction_General',pFieldList,'MonthStoreFlag','Sales_Transaction',p_StartDate);
	LET pFieldList = Null();
	CALL LogMessage('Sales_Transaction_General',cSUCCESSFUL);

	CALL DropTable('Sales_Transaction_General');

ENDIF;
///$tab Colombia
SET pTable = Sales_Transaction_Colombia;
SET pMask = Order Mgmt Dashboard\Colombia Warehouse\QV\QV_Invoices_*.csv;
SET pLoad = RecNo() as [RN]
		,FilePath() as [FN]
		
		,[CURRENCY] as [Trxn Currency]
		,[CURRENCY] as [COGS Trxn Currency]
		,[CURRENCY] as [FinalCurrency]
		,[CURRENCY] as [COGS_FinalCurrency]
		,[CURRENCY] as [LocalCurrency]
		,[CURRENCY] as [Currency]
		
		,[CURRENCY]&'-'&Text(Date([Invoice Date],'YYMM')) as [CompoundKey]
		
		,Text([Company Number Detail]) 	as [Entity]
		,Text([CustomerID]) 			as [Customer Number]
		,Text(trim([Item Number])) 		as [Product Number]
		
		,[ShipToDeliveryLocationID] 	as [ShipToDeliveryLocationID.src]
		,Text([ShipToDeliveryLocationID]) as [ShipToDeliveryLocationID]
		
		,Text([CustomerID])&'-'&Text([ShipToDeliveryLocationID]) as [CustomerShipToAddressID]
		
		,[Item Branch Key (inv org #)] 	as [Orginal Invoice]
		,[Item Branch Key (inv org #)] 	as [Inventory Org]
		
		,[Order Number]
		,[Order Line Number]			as [Address Number]
		,[Invoice Number]
		,[Doc Type]
		,[Ansell Std U/M] 				as [U/M]
		
		,Num(Date#([Ship Date],'MM/DD/YYYY')) 				as [Ship Date]
		,Num(Date#([Invoice Date],'MM/DD/YYYY')) 			as [Invoice Date]
		,Num(Date#([Invoice Date],'MM/DD/YYYY')) 			as [Promised Delivery Date]
		,Num(Date#([Invoice Date],'MM/DD/YYYY')) 			as [Date]
		,Text(Date(Date#([Invoice Date],'MM/DD/YYYY'),'YYYY')) as [MonthStoreFlag]
		
		,[Sales Quantity]
		,Alt(Num#([Sales Quantity]),0) as [Sales Qty]
		
		,[GROSS Sales Amount LC] as [GROSS Sales Amount   LC]
		,Alt(NUM#([GROSS Sales Amount LC]),0) as [GROSS Sales Amount LC]

		,[Returns LC] 				as [Returns LC.src]
		,Alt(Num#([Returns LC]),0) 	as [Returns LC]

		,[Sales Cost Amount LC (net see thru)] as [Sales Cost Amount LC (net see thru).src]
		,Alt(Num#([Sales Cost Amount LC (net see thru)]),0) as [Sales Cost Amount LC (net see thru)]
		,Alt(Num#([Sales Cost Amount LC (net see thru)]),0) as [BASE_COGS]

		,[Sales Cost Amount Legal Entity]
		,Num#([Sales Cost Amount Legal Entity]) as [COST_LE]

		,[Settlement Discount LC] 				as [Settlement Discount LC.src]
		,Alt(Num#([Settlement Discount LC]),0) 	as [Settlement Discount LC]
		
		,0 as [Trxn Sales Amount]
		,0 as [Trxn COGS Amount]

		,0 as [Trans Type]

		,[Co-op Rebate LC] 				as [Co-op Rebate LC.src]
		,Alt(Num#([Co-op Rebate LC]),0) as [Co-op Rebate LC]

		,[Rebates LC] 					as [Rebates LC.src]
		,Alt(Num#([Rebates LC]),0) 		as [Rebates LC]

		,[Volume Discount LC] 				as [Volume Discount LC.src]
		,Alt(Num#([Volume Discount LC]),0) 	as [Volume Discount LC]

		,[BOGO] 				as [BOGO.src]
		,Alt(Num#([BOGO]),0) 	as [BOGO]

		,[Slotting] 				as [Slotting.src]
		,Alt(Num#([Slotting]),0) 	as [Slotting]

		,[TPR] 						as [TPR.src]
		,Alt(Num#([TPR]),0) 		as [TPR]

		,[Other] 				as [Other.src]
		,Alt(Num#([Other]),0) 	as [Other]

		,0 as [COGS Adj 1 LC]
		,0 as [COGS Adj 2 LC]
		,[Type of Discount #]
		,[Type of Discount Name]

		,[Offer #]
		,Null() as [PO Number]
		
		,'Sales' as [Flag]
		;
SET pFileSpec = txt, codepage is 1252, embedded labels, delimiter is ',', msq;
SET pCondition = (Date#([Invoice Date],'MM/DD/YYYY') >= $(pStartDate) or alt(ApplyMap('mHReload',upper(FilePath()),0),0)=1);
SET pFileCheck = Pick(
	WildMatch(Upper('$1'),'QV_INVOICES_??????.CSV')+1
	,0
	,Date(MonthStart(Date#(Right(SubField('$1','.',1),6),'MMYYYY')),'YYYYMMDD')&'-'&Date(MonthEnd(Date#(Right(SubField('$1','.',1),6),'MMYYYY')),'YYYYMMDD')
	);
SET pFCError = 'Expected to have "QV_INVOICES_[MMYYYY].CSV"';

CALL MaskLoad(pTable, pMask, pLoad, pFileSpec, pCondition, pFileCheck, pStartDate);
LET pTable 		= Null(); 
LET pMask 		= Null(); 
LET pLoad 		= Null(); 
LET pFileSpec 	= Null();
LET pCondition 	= Null(); 
LET pFileCheck 	= Null();
LET pFCError 	= Null();

IF not IsNull(TableNumber('Sales_Transaction_Colombia')) then

	Left Join ([Sales_Transaction_Colombia])
		LOAD Distinct
			[RN]
			,[FN]
			,1 as [QC]
		Resident [Sales_Transaction_Colombia]
		Where 
			(not [BOGO.src]        							= [BOGO]) or
			(not [Co-op Rebate LC.src]        				= [Co-op Rebate LC]) or
			(not [GROSS Sales Amount   LC]        			= [GROSS Sales Amount LC]) or
			(not [Other.src]        						= [Other]) or
			(not [Rebates LC.src]       					= [Rebates LC]) or
			(not [Returns LC.src]        					= [Returns LC]) or
			(not [Sales Cost Amount LC (net see thru).src]	= [Sales Cost Amount LC (net see thru)]) or
			(not [Sales Cost Amount Legal Entity]        	= [COST_LE]) or
			(not [Sales Quantity]        					= [Sales Qty]) or
			(not [Settlement Discount LC.src]        		= [Settlement Discount LC]) or
			(not [ShipToDeliveryLocationID.src]        		= [ShipToDeliveryLocationID]) or
			(not [Slotting.src]        						= [Slotting]) or
			(not [TPR.src]        							= [TPR]) or
			(not [Volume Discount LC.src]        			= [Volume Discount LC])
			;

	IF FieldValueCount('QC') > 0 then
		SET vWhere = and QC <> 0;
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'BOGO.src'				,'BOGO'						,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'GROSS Sales Amount   LC'	,'GROSS Sales Amount LC'	,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Other.src'				,'Other'					,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Rebates LC.src'			,'Rebates LC'				,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Returns LC.src'			,'Returns LC'				,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Sales Cost Amount LC (net see thru).src','Sales Cost Amount LC (net see thru)'		,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Sales Cost Amount Legal Entity','COST_LE'			,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Sales Quantity'			,'Sales Qty'				,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Settlement Discount LC.src','Settlement Discount LC'		,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'ShipToDeliveryLocationID.src','ShipToDeliveryLocationID'	,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Slotting.src'			,'Slotting'					,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'TPR.src'					,'TPR'						,vWhere);
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage,'Volume Discount LC.src'	,'Volume Discount LC'		,vWhere);
		LET vWhere = Null();
	ENDIF
	
	
	
	/*IF FieldValueCount('QC') > 0 then
	
		SET vMessage = 'Line #'&([RN])&' in ['&[FN]&'] has:'&chr(10)&chr(13)
			&replace(
				replace(
					';;'
					&if(not ([BOGO.src] 								= [BOGO]) 									,';[BOGO] "'						&[BOGO.src]							&'". Replaced with "'&[BOGO]&'";','')
					&if(not ([Co-op Rebate LC.src] 						= [Co-op Rebate LC]) 						,';[Co-op Rebate LC] "'				&[Co-op Rebate LC.src]				&'". Replaced with "'&[Co-op Rebate LC]&'";','')
					&if(not ([GROSS Sales Amount LC] 					= [GROSS Sales Amount LC]) 					,';[GROSS Sales Amount LC] "'		&[GROSS Sales Amount LC]			&'". Replaced with "'&[GROSS Sales Amount LC]&'";','')
					&if(not ([Other.src] 								= [Other]) 									,';[Other] "'						&[Other.src]						&'". Replaced with "'&[Other]&'";','')
					&if(not ([Rebates LC.src] 							= [Rebates LC]) 							,';[Rebates LC] "'					&[Rebates LC.src]					&'". Replaced with "'&[Rebates LC]&'";','')
					&if(not ([Returns LC.src] 							= [Returns LC]) 							,';[Returns LC] "'					&[Returns LC.src]					&'". Replaced with "'&[Returns LC]&'";','')
					&if(not ([Sales Cost Amount LC (net see thru).src] 	= [Sales Cost Amount LC (net see thru)]) 	,';[Sales Cost Amount LC (net see thru)] "'&[Sales Cost Amount LC (net see thru).src]	&'". Replaced with "'&[Sales Cost Amount LC (net see thru)]&'";','')
					&if(not ([Sales Cost Amount Legal Entity] 			= [COST_LE]) 								,';[Sales Cost Amount Legal Entity] "'&[Sales Cost Amount Legal Entity]	&'". Replaced with "'&[COST_LE]&'";','')
					&if(not ([Sales Quantity] 							= [Sales Qty]) 								,';[Sales Quantity] "'				&[Sales Quantity]					&'". Replaced with "'&[Sales Qty]&'";','')
					&if(not ([Settlement Discount LC.src] 				= [Settlement Discount LC])					,';[Settlement Discount LC] "'		&[Settlement Discount LC.src]		&'". Replaced with "'&[Settlement Discount LC]&'";','')
					&if(not ([ShipToDeliveryLocationID.src] 			= [ShipToDeliveryLocationID]) 				,';[ShipToDeliveryLocationID] "'	&[ShipToDeliveryLocationID.src]		&'". Replaced with "'&[ShipToDeliveryLocationID]&'";','')
					&if(not ([Slotting.src] 							= [Slotting]) 								,';[Slotting] "'					&[Slotting.src]						&'". Replaced with "'&[Slotting]&'";','')
					&if(not ([TPR.src] 									= [TPR]) 									,';[TPR] "'							&[TPR.src]							&'". Replaced with "'&[TPR]&'";','')
					&if(not ([Volume Discount LC.src] 					= [Volume Discount LC]) 					,';[Volume Discount LC] "'			&[Volume Discount LC.src]			&'". Replaced with "'&[Volume Discount LC]&'";','')
					&';;'
					,';;;'
					,'')
				,';;'
				,chr(10)&chr(13))
			;
		CALL LogMessage('Sales_Transaction_Colombia',cWARNING,vMessage);
		
		LET vMessage = Null();
	
	ENDIF;*/
	
	DROP Field [QC] From [Sales_Transaction_Colombia];

	SET pFieldList = [FN]
			,[RN]
			,[Trxn Currency]
			,[COGS Trxn Currency]
			,[FinalCurrency]
			,[COGS_FinalCurrency]
			,[LocalCurrency]
			,[Currency]
			,[CompoundKey]
			,[Entity]
			,[Customer Number]
			,[Product Number]
			,[ShipToDeliveryLocationID]
			,[CustomerShipToAddressID]
			,[Orginal Invoice]
			,[Inventory Org]
			,[Order Number]
			,[Address Number]
			,[Invoice Number]
			,[Doc Type]
			,[U/M]
			,[Ship Date]
			,[Invoice Date]
			,[Promised Delivery Date]
			,[Date]
			,[Sales Qty]
			,[GROSS Sales Amount LC]
			,[Returns LC]
			,[Sales Cost Amount LC (net see thru)]
			,[Trxn Sales Amount]
			,[Trxn COGS Amount]
			,[BASE_COGS]
			,[COST_LE]
			,[Settlement Discount LC]
			,[Trans Type]
			,[Co-op Rebate LC]
			,[Rebates LC]
			,[Volume Discount LC]
			,[BOGO]
			,[Slotting]
			,[TPR]
			,[Other]
			,[COGS Adj 1 LC]
			,[COGS Adj 2 LC]
			,[Type of Discount #]
			,[Type of Discount Name]
			,[Offer #]
			,[Flag]
			,[PO Number]
			;
	
	SET p_StartDate =  or Num(Date) < $(pStartDate);
	CALL StoreIncremental('Sales_Transaction_Colombia',pFieldList,'MonthStoreFlag','Sales_Transaction',p_StartDate);
	LET pFieldList = Null();
	CALL LogMessage('Sales_Transaction_Colombia',cSUCCESSFUL);

	CALL DropTable('Sales_Transaction_Colombia');

ENDIF;
///$tab Logs

CALL DelLog ('$(vLOGPath)','$(vLogDocPrefixName)',$(vLogCountSaveLoad))

LET vReloadTime = Timestamp(vReloadTime,'YYYYMMDDhhmmss');

LOG:
LOAD
	RecNo() as [LOG.RN]
	,[Module]
	,[ReloadTime]
	,[TABLE]
	,[STATUS]
	,IF(STATUS = 'WARNING','Line #'&([REC_NO])&' in field ['&[MESSAGE]&'] data was replaced from value "'&FromValue&'" to value "'&ToValue&'"
	Source file: "'&FN&'"', MESSAGE)	as MESSAGE
	,REC_NO
    ,FromValue
    ,ToValue
	,if([STATUS] = 'WARNING ON DOUBLES'
		,'DOUBLES'
		,TextBetween([MESSAGE],'[',']',1)) as [FILENAME],
	FN									as [File name]
FROM
[$(vLOGPath)$(vLogDocPrefixName)*$(vReloadTime).qvd]
(qvd)
//Where Upper([Module]) = Upper(DocumentPath())
;
	
	[Log_Error]:
	LOAD 	Module,
			STATUS,
			//TABLE,
			COUNT(STATUS) as QtyWorning
	Resident LOG
	Where STATUS <> 'FAILURE'
	Group BY 	Module,
				STATUS/*,
				TABLE*/;
	
	IF NoOfFields('Log_Error') then	
		STORE Log_Error into '$(vLOGPath)$(vLogTotalPrefixName)Error_$(vReloadTime).qvd' (qvd);
		
		DROP Table Log_Error;
	ENDIF	

	CALL DelLog ('$(vLOGPath)','$(vLogDocPrefixName)',$(vLogCountSaveLoad))
	
		[Log_FAILURE]:
		NoConcatenate LOAD 	*
		Resident LOG
		Where STATUS = 'FAILURE';
	
	IF NoOfFields('Log_FAILURE') then	
		STORE Log_FAILURE into '$(vLOGPath)$(vLogTotalPrefixName)FAILURE_$(vReloadTime).qvd' (qvd);
		
		DROP Table Log_FAILURE;
	ENDIF	

	CALL DelLog ('$(vLOGPath)','$(vLogTotalPrefixName)',$(vLogCountSaveLoad))
///$tab Mail
CALL FailuresInTransformMessage('');
///$tab Exit script
